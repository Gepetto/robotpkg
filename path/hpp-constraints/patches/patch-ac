Newer C++11 compat

--- tests/matrix-view.cc~	2018-05-13 17:54:59.000000000 +0200
+++ tests/matrix-view.cc	2018-07-11 15:39:14.804929541 +0200
@@ -60,16 +60,31 @@
 
   segments_t v, w, expected_v, expected_w;
 
+#if __cplusplus <= 199711L
   v = list_of(a)(f);
+#else
+  v = { a, f };
+#endif
   BOOST_CHECK_EQUAL(BlockIndex::difference (v, b), v);
 
+#if __cplusplus <= 199711L
   v = list_of(segment_t(0,5))(segment_t(7,9));
   v = BlockIndex::difference (v, segment_t (0,4));
   expected_v = list_of(segment_t(4,1))(segment_t(7,9));
+#else
+  v = { segment_t(0,5), segment_t(7,9) };
+  v = BlockIndex::difference (v, segment_t (0,4));
+  expected_v = { segment_t(4,1), segment_t(7,9) };
+#endif
   BOOST_CHECK_EQUAL(v, expected_v);
 
+#if __cplusplus <= 199711L
   v = list_of (b)(a)(c);
   expected_v = list_of(segment_t(0,3));
+#else
+  v = { b, a, c };
+  expected_v = { segment_t(0,3) };
+#endif
   BlockIndex::sort(v);
   BlockIndex::shrink(v);
   BOOST_CHECK_EQUAL(v.size(), 1);
@@ -92,78 +107,139 @@
   BlockIndex::add (w, v);
 
   // v = 0 1 2 3 [4 5 6] 7 8 [9 10] 11 12 13 14 [15 16 17 18 19] 20 ...
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (segment_t (5,2))(f)(g);
   expected_w = list_of (segment_t (4, 1));
+#else
+  v = { e, f, g };
+  expected_v = { segment_t (5,2), f, g };
+  expected_w = { segment_t (4, 1) };
+#endif
   w = BlockIndex::split (v, 1);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
   v.clear ();
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (segment_t (6,1))(f)(g);
   expected_w = list_of (segment_t (4, 2));
+#else
+  v = { e, f, g };
+  expected_v = { segment_t (6,1), f, g };
+  expected_w = { segment_t (4, 2) };
+#endif
   w = BlockIndex::split (v, 2);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (f)(g);
   expected_w = list_of (e);
+#else
+  v = { e, f, g };
+  expected_v = { f, g };
+  expected_w = { e };
+#endif
   w = BlockIndex::split (v, 3);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (segment_t (10,1))(g);
   expected_w = list_of (e)(segment_t (9,1));
+#else
+  v = { e, f, g };
+  expected_v = { segment_t (10,1), g };
+  expected_w = { e, segment_t (9,1) };
+#endif
   w = BlockIndex::split (v, 4);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (g);
   expected_w = list_of (e)(f);
+#else
+  v = { e, f, g };
+  expected_v = { g };
+  expected_w = { e, f };
+#endif
   w = BlockIndex::split (v, 5);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (segment_t (16, 4));
   expected_w = list_of (e)(f)(segment_t (15, 1));
+#else
+  v = { e, f, g };
+  expected_v = { segment_t (16, 4) };
+  expected_w = { e, f, segment_t (15, 1) };
+#endif
   w = BlockIndex::split (v, 6);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (segment_t (17, 3));
   expected_w = list_of (e)(f)(segment_t (15, 2));
+#else
+  v = { e, f, g };
+  expected_v = { segment_t (17, 3) };
+  expected_w = { e, f, segment_t (15, 2) };
+#endif
   w = BlockIndex::split (v, 7);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (segment_t (18, 2));
   expected_w = list_of (e)(f)(segment_t (15, 3));
+#else
+  v = { e, f, g };
+  expected_v = { segment_t (18, 2) };
+  expected_w = { e, f, segment_t (15, 3) };
+#endif
   w = BlockIndex::split (v, 8);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v = list_of (segment_t (19, 1));
   expected_w = list_of (e)(f)(segment_t (15, 4));
+#else
+  v = { e, f, g };
+  expected_v = { segment_t (19, 1) };
+  expected_w = { e, f, segment_t (15, 4) };
+#endif
   w = BlockIndex::split (v, 9);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
   expected_v.clear ();
   expected_w = list_of (e)(f)(g);
+#else
+  v = { e, f, g };
+  expected_v.clear ();
+  expected_w = { e, f, g };
+#endif
   w = BlockIndex::split (v, 10);
   BOOST_CHECK (v == expected_v);
   BOOST_CHECK (w == expected_w);
 
   // v = 0 1 2 3 [4 5 6] 7 8 [9 10] 11 12 13 14 [15 16 17 18 19] 20 ...
+#if __cplusplus <= 199711L
   v = list_of (e)(f)(g);
 
   expected_w = list_of (segment_t (4, 1));
@@ -176,45 +252,99 @@
 
   expected_w = list_of (e);
   w = BlockIndex::extract (v, 0, 3);
+#else
+  v = { e, f, g };
+
+  expected_w = { segment_t (4, 1) };
+  w = BlockIndex::extract (v, 0, 1);
+  BOOST_CHECK (w == expected_w);
+
+  expected_w = { segment_t (4, 2) };
+  w = BlockIndex::extract (v, 0, 2);
+  BOOST_CHECK (w == expected_w);
+
+  expected_w = { e };
+  w = BlockIndex::extract (v, 0, 3);
+#endif
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (e)(segment_t (9, 1));
+#else
+  expected_w = { e, segment_t (9, 1) };
+#endif
   w = BlockIndex::extract (v, 0, 4);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (e)(f);
+#else
+  expected_w = { e, f };
+#endif
   w = BlockIndex::extract (v, 0, 5);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (e)(f)(segment_t (15, 1));
+#else
+  expected_w = { e, f, segment_t (15, 1) };
+#endif
   w = BlockIndex::extract (v, 0, 6);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (e)(f)(segment_t (15, 2));
+#else
+  expected_w = { e, f, segment_t (15, 2) };
+#endif
   w = BlockIndex::extract (v, 0, 7);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (segment_t (5, 2))(f)(segment_t (15, 3));
+#else
+  expected_w = { segment_t (5, 2), f, segment_t (15, 3) };
+#endif
   w = BlockIndex::extract (v, 1, 7);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (segment_t (6, 1))(f)(segment_t (15, 4));
+#else
+  expected_w = { segment_t (6, 1), f, segment_t (15, 4) };
+#endif
   w = BlockIndex::extract (v, 2, 7);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (f)(g);
+#else
+  expected_w = { f, g };
+#endif
   w = BlockIndex::extract (v, 3, 7);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (f)(segment_t (15, 4));
+#else
+  expected_w = { f, segment_t (15, 4) };
+#endif
   w = BlockIndex::extract (v, 3, 6);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (segment_t (10, 1))(segment_t (15, 4));
+#else
+  expected_w = { segment_t (10, 1), segment_t (15, 4) };
+#endif
   w = BlockIndex::extract (v, 4, 5);
   BOOST_CHECK (w == expected_w);
 
+#if __cplusplus <= 199711L
   expected_w = list_of (segment_t (10, 1))(segment_t (15, 3));
+#else
+  expected_w = { segment_t (10, 1), segment_t (15, 3) };
+#endif
   w = BlockIndex::extract (v, 4, 4);
   BOOST_CHECK (w == expected_w);
 }
