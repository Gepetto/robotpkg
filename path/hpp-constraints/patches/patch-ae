--- CMakeLists.txt.orij
+++ CMakeLists.txt
@@ -108,7 +108,7 @@ IF (${USE_QPOASES})
   SET(QPOASES_PREFIX ${CMAKE_PREFIX_PATH} CACHE PATH "Set the prefix where qpOASES is installed")
   FIND_LIBRARY(QPOASES_LIBRARY "qpOASES" PATHS ${QPOASES_PREFIX} PATH_SUFFIXES lib)
   FIND_PATH(QPOASES_INCLUDE_DIRS NAMES "qpOASES.hpp" PATHS ${QPOASES_PREFIX} PATH_SUFFIXES include)
-  INCLUDE_DIRECTORIES(${QPOASES_INCLUDE_DIRS})
+  INCLUDE_DIRECTORIES(SYSTEM ${QPOASES_INCLUDE_DIRS})
 ENDIF ()
 
 ADD_SUBDIRECTORY (src)
 
--- include/hpp/constraints/matrix-view.hh.orig
+++ include/hpp/constraints/matrix-view.hh
@@ -184,7 +184,7 @@ namespace Eigen {
 # if !HPP_EIGEN_USE_EVALUATOR
         CoeffReadCost = ArgType::CoeffReadCost,
 # endif // !HPP_EIGEN_USE_EVALUATOR
-        Flags = ~AlignedBit & ~DirectAccessBit & ~ActualPacketAccessBit & ~LinearAccessBit & ArgType::Flags,
+        Flags = ~PacketAccessBit & ~DirectAccessBit & ~ActualPacketAccessBit & ~LinearAccessBit & ArgType::Flags,
         RowsAtCompileTime = (_allRows ? ArgType::RowsAtCompileTime : _Rows),
         ColsAtCompileTime = (_allCols ? ArgType::ColsAtCompileTime : _Cols),
         MaxRowsAtCompileTime = ArgType::MaxRowsAtCompileTime,
@@ -197,6 +197,7 @@ namespace Eigen {
     struct Assignment<Derived, MatrixBlockView <ArgType, _Rows, _Cols, _allRows, _allCols>, Functor, Dense2Dense, Scalar> {
       typedef MatrixBlockView <ArgType, _Rows, _Cols, _allRows, _allCols> OtherDerived;
       static EIGEN_STRONG_INLINE void run(Derived& dst, const OtherDerived& src, const Functor& func) {
+        dst.resize(src.rows(), src.cols());
         typedef Block<Derived> BlockDerived;
         typedef Assignment<BlockDerived, typename OtherDerived::BlockConstXprType, Functor> AssignmentType;
         for (typename OtherDerived::block_iterator b (src); b.valid(); ++b) {
@@ -309,7 +310,7 @@ namespace Eigen {
 
       enum {
         CoeffReadCost = evaluator<ArgType>::CoeffReadCost,
-        Flags = ~AlignedBit & ~DirectAccessBit & ~ActualPacketAccessBit & ~LinearAccessBit & ArgType::Flags,
+        Flags = ~PacketAccessBit & ~DirectAccessBit & ~ActualPacketAccessBit & ~LinearAccessBit & ArgType::Flags,
         Alignment = 0
       };
       EIGEN_DEVICE_FUNC explicit unary_evaluator (const XprType& view)
