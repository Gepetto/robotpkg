Set assimp flags before the definition of the targets where they are used.
Link with assimp as a private library so that the dependency is not transitive
(for default_plugin).

--- src/rviz/CMakeLists.txt~	2014-06-27 00:15:49.000000000 +0200
+++ src/rviz/CMakeLists.txt	2014-10-28 17:24:12.212341916 +0100
@@ -11,6 +11,29 @@
 
 configure_file(env_config.cpp.in ${ENV_CONFIG_FILE} @ONLY)
 
+find_package(ASSIMP QUIET)
+if (NOT ASSIMP_FOUND)
+  pkg_check_modules(ASSIMP assimp)
+endif()
+if (ASSIMP_FOUND)
+  if( NOT ${ASSIMP_VERSION} VERSION_LESS "2.0.1150" )
+    add_definitions(-DASSIMP_UNIFIED_HEADER_NAMES)
+    message(STATUS "Assimp version has unified headers")
+  else()
+    message(STATUS "Assimp version does not have unified headers")
+  endif()
+  include_directories(${ASSIMP_INCLUDE_DIRS})
+  link_directories(${ASSIMP_LIBRARY_DIRS})
+else()
+  message(STATUS "could not find assimp (perhaps available thorugh ROS package?), so assimping assimp v2")
+  set(ASSIMP_LIBRARIES assimp)
+  set(ASSIMP_LIBRARY_DIRS)
+  set(ASSIMP_CXX_FLAGS)
+  set(ASSIMP_CFLAGS_OTHER)
+  set(ASSIMP_LINK_FLAGS)
+  set(ASSIMP_INCLUDE_DIRS)
+endif()
+
 # We create one lib with the C++...
 
 qt4_wrap_cpp(MOC_FILES
@@ -183,13 +206,13 @@
 )
 
 target_link_libraries(${PROJECT_NAME}
-  ${Boost_LIBRARIES}
+  LINK_PUBLIC ${Boost_LIBRARIES}
   ${catkin_LIBRARIES}
   ${OGRE_OV_LIBRARIES_ABS}
   ${OPENGL_LIBRARIES}
   ${QT_LIBRARIES}
   ${rviz_ADDITIONAL_LIBRARIES}
-  assimp
+  LINK_PRIVATE assimp
   yaml-cpp
 )
 
@@ -197,29 +220,6 @@
   set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS "-undefined dynamic_lookup")
 endif(APPLE)
 
-find_package(ASSIMP QUIET)
-if (NOT ASSIMP_FOUND)
-  pkg_check_modules(ASSIMP assimp)
-endif()
-if (ASSIMP_FOUND)
-  if( NOT ${ASSIMP_VERSION} VERSION_LESS "2.0.1150" )
-    add_definitions(-DASSIMP_UNIFIED_HEADER_NAMES)
-    message(STATUS "Assimp version has unified headers")
-  else()
-    message(STATUS "Assimp version does not have unified headers")
-  endif()
-  include_directories(${ASSIMP_INCLUDE_DIRS})
-  link_directories(${ASSIMP_LIBRARY_DIRS})
-else()
-  message(STATUS "could not find assimp (perhaps available thorugh ROS package?), so assimping assimp v2")
-  set(ASSIMP_LIBRARIES assimp)
-  set(ASSIMP_LIBRARY_DIRS)
-  set(ASSIMP_CXX_FLAGS)
-  set(ASSIMP_CFLAGS_OTHER)
-  set(ASSIMP_LINK_FLAGS)
-  set(ASSIMP_INCLUDE_DIRS)
-endif()
-
 find_package(PkgConfig)
 pkg_check_modules(NEW_YAMLCPP yaml-cpp>=0.5)
 if(NEW_YAMLCPP_FOUND)
