Fix build on x86_64 - matrix size is size_t

--- include/jrl/mal/boostmatrixsvd.hh~	2011-04-14 22:17:56.000000000 +0200
+++ include/jrl/mal/boostmatrixsvd.hh	2011-11-01 13:44:20.630470000 +0100
@@ -46,7 +46,7 @@
 
     protected:
       /* SVD memory. */
-      mutable unsigned int nbrows,nbcols,nmajor,nminor;
+      mutable size_t nbrows,nbcols,nmajor,nminor;
       mutable bool toTranspose;
 
       mutable ::boost::numeric::ublas::matrix<FloatType,::boost::numeric::ublas::column_major> McolMajor;
@@ -116,7 +116,7 @@
 	{
 	  double vw;
 	  int linfo;
-	  const int n=nbrows,m=nbcols;
+	  const int n=static_cast<int>(nbrows),m=static_cast<int>(nbcols);
 	  lda = std::max(m,n);
 	  lw =-1;
 	  dgesvd_(&Jobu, &Jobvt, &m, &n,
@@ -154,8 +154,8 @@
 	/* Compute the SVD. */
 
 	{
-	  int linfo; const int n=nbrows,
-		       m=nbcols;
+	  int linfo; const int n=static_cast<int>(nbrows),
+		       m=static_cast<int>(nbcols);
 	  lda = std::max(m,n);
 	  lu = traits::leading_dimension(U); // NR
 	  lvt = traits::leading_dimension(VT); // NC
@@ -236,8 +236,8 @@
 
 	/* Compute the SVD. */
 	{
-	  const int n=nbrows,
-	    m=nbcols;
+	  const int n=static_cast<int>(nbrows),
+	    m=static_cast<int>(nbcols);
 	  lda = std::max(m,n);
 	  lu = traits::leading_dimension(U); // NR
 	  lvt = traits::leading_dimension(VT); // NC
