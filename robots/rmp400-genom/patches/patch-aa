commit e71595f6eeec2a8536c98331e45d256020b913e5
Author: Matthieu Herrb <matthieu.herrb@laas.fr>
Date:   Sun Jun 26 17:25:55 2011 +0200

    Make the code for Mana's emergency stop optional.
    
    This allows the module to be used on robots without this particular
    device which is available only on LAAS's robot.
    
    use genom -DWITH_FELIB to enable it.

diff --git codels/rmp400CntrlTaskCodels.c.orig codels/rmp400CntrlTaskCodels.c
index f9defec..b006019 100644
--- codels/rmp400CntrlTaskCodels.c
+++ codels/rmp400CntrlTaskCodels.c
@@ -228,6 +228,7 @@ Recale (RMP400_CART_3DCONFIG *setPosStr, int *bilan)
 	return OK;
 }
 
+#ifdef WITH_FELIB
 /*------------------------------------------------------------------------
  * resCtrl  -  control codel of EXEC request ResetEmergencyStop
  *
@@ -249,5 +250,4 @@ resCtrl(int *report)
 	}
 	return OK;
 }
-
-
+#endif
diff --git codels/rmp400MotionTaskCodels.c.orig codels/rmp400MotionTaskCodels.c
index 00deeba..fde3ed3 100644
--- codels/rmp400MotionTaskCodels.c
+++ codels/rmp400MotionTaskCodels.c
@@ -37,7 +37,9 @@
 #include "rmp400Const.h"
 #include "server/rmp400Header.h"
 
+#ifdef WITH_FELIB
 #include "fe/ftdi-emergency.h"
+#endif
 
 #include "odoProba.h"
 #include "joystick.h"
@@ -49,7 +51,9 @@
 static struct RMP_DEV_STR **rmp;
 static POSTER_ID pomPosterId = NULL;
 static JOYSTICK_STR *joy = NULL;
+#ifdef WITH_FELIB
 static FE_STR *fe = NULL;
+#endif
 
 extern void *rmp400ReadTask(void *);
 extern STATUS rmp400Odo3d(int *report, double period);
@@ -256,6 +260,7 @@ rmp400DataUpdate(RMP400_STATUS_STR *status)
 
 		status->rs_mode = RMP400_MOTORS_OFF;
 	}
+#ifdef WITH_FELIB
 	/* Check emergency stop */
 	fe_get_status(fe);
 	/* ignore pause if motors are off */
@@ -266,6 +271,7 @@ rmp400DataUpdate(RMP400_STATUS_STR *status)
 		if (status->rs_mode != RMP400_MOTORS_OFF) 
 			status->rs_mode = RMP400_EMERGENCY;
 	}
+#endif
 	return OK;
 }
 
@@ -554,14 +560,14 @@ rmp400InitStart(int *report)
 	char name[20];
 
 	*report = OK;
-
+#ifdef WITH_FELIB
 	/* connect emergency stop */
 	fe = fe_init();
 	if (fe == NULL) {
 		*report = S_rmp400_EMERGENCY_ERROR;
 		return ETHER;
 	}
-
+#endif
 	if ((n = rmpOpenAll(&rmp)) == -1) {
 		*report = S_rmp400_RMPLIB_ERROR;
 		return ETHER;
@@ -1010,6 +1016,7 @@ rmp400LogInter(GEN_STRING128 *fileName, int *report)
 	return ETHER;
 }
 
+#ifdef WITH_FELIB
 /*------------------------------------------------------------------------
  * ResetEmergencyStop
  *
@@ -1035,3 +1042,4 @@ resMain(int *report)
 
 	return ETHER;
 }
+#endif
diff --git rmp400.gen.orig rmp400.gen
index cf0e1cc..be0b914 100644
--- rmp400.gen.orig	2011-06-16 18:15:30.000000000 +0200
+++ rmp400.gen	2011-10-27 17:21:17.846523000 +0200
@@ -10,7 +10,10 @@
 #ifdef GYRO
 			    GYRO,
 #endif
-			    contlaw, rmp-libs, felib;
+#ifdef WITH_FELIB
+			    felib,
+#endif
+			    contlaw, rmp-libs;
     lang:		    "c";
     number:		    09001;
     version:		    "0.4";
@@ -209,6 +212,7 @@
     fail_msg:		    MOTORS_OFF, EMERGENCY_STOP;
 };
 
+#ifdef WITH_FELIB
 request ResetEmergencyStop {
     doc:		    "Reset Emergency Stop";
     type: 		    exec;
@@ -217,7 +221,7 @@
     codel_main:		    resMain;
 fail_msg:		    NOT_EMERGENCY, EMERGENCY_STOP;
 };
-
+#endif
 /*----------------------------------------------------------------------*/
 
 /**
