Two x86_64-related fixes

- use taskSpawn2 instead of taskSpawn
- properly define the ReadTask with a void* parameter instead of an int
  (intptr_t would be ok here too).

diff --git a/codels/rmp400MotionTaskCodels.c b/codels/rmp400MotionTaskCodels.c
index 47ed9a6..509ff69 100644
--- codels/rmp400MotionTaskCodels.c
+++ codels/rmp400MotionTaskCodels.c
@@ -752,7 +752,7 @@ rmp400InitStart(int *report)
 	errnoSet(0);
 	for (i = 0; i < 2; i++) {
 		snprintf(name, sizeof(name), "tReadTask%d", i);
-		if (taskSpawn(name, 100, 0, 8192, rmp400ReadTask, rmp[i])
+		if (taskSpawn2(name, 100, 0, 8192, rmp400ReadTask, rmp[i])
 		    == ERROR) {
 			fprintf(stderr, "taskSpawn %s error\n", name);
 			*report =  errnoGet();
diff --git a/codels/rmp400ReadTask.c b/codels/rmp400ReadTask.c
index ebb2094..efeeb35 100644
--- codels/rmp400ReadTask.c
+++ codels/rmp400ReadTask.c
@@ -26,7 +26,7 @@
  * sent by the motor controllers
  */
 int
-rmp400ReadTask(int rmpDev)
+rmp400ReadTask(void* rmpDev)
 {
 	unsigned char buf[18];
 	struct RMP_DEV_STR *rmp = (struct RMP_DEV_STR *)rmpDev;
