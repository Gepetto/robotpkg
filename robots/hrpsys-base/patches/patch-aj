Fix C++11 glitches with boost::assign

--- rtc/AutoBalancer/GaitGenerator.h~	2017-08-05 00:10:49.000000000 +0200
+++ rtc/AutoBalancer/GaitGenerator.h	2017-08-28 13:48:07.098555886 +0200
@@ -315,7 +315,7 @@
           default_zmp_offsets.push_back(hrp::Vector3::Zero());
           default_zmp_offsets.push_back(hrp::Vector3::Zero());
           double zmp_weight_initial_value[4] = {1.0, 1.0, 0.1, 0.1};
-          zmp_weight_map = boost::assign::map_list_of<leg_type, double>(RLEG, zmp_weight_initial_value[0])(LLEG, zmp_weight_initial_value[1])(RARM, zmp_weight_initial_value[2])(LARM, zmp_weight_initial_value[3]);
+          zmp_weight_map = boost::assign::map_list_of<leg_type, double>(RLEG, zmp_weight_initial_value[0])(LLEG, zmp_weight_initial_value[1])(RARM, zmp_weight_initial_value[2])(LARM, zmp_weight_initial_value[3]).convert_to_container<std::map<leg_type, double> >();
           zmp_weight_interpolator = boost::shared_ptr<interpolator>(new interpolator(4, dt));
           zmp_weight_interpolator->set(zmp_weight_initial_value); /* set initial value */
           zmp_weight_interpolator->setName("GaitGenerator zmp_weight_interpolator");
@@ -385,7 +385,7 @@
           if (!zmp_weight_interpolator->isEmpty()) {
               double zmp_weight_output[4];
               zmp_weight_interpolator->get(zmp_weight_output, true);
-              zmp_weight_map = boost::assign::map_list_of<leg_type, double>(RLEG, zmp_weight_output[0])(LLEG, zmp_weight_output[1])(RARM, zmp_weight_output[2])(LARM, zmp_weight_output[3]);
+              zmp_weight_map = boost::assign::map_list_of<leg_type, double>(RLEG, zmp_weight_output[0])(LLEG, zmp_weight_output[1])(RARM, zmp_weight_output[2])(LARM, zmp_weight_output[3]).convert_to_container<std::map<leg_type, double> >();
           }
       };
 #ifdef FOR_TESTGAITGENERATOR
@@ -752,9 +752,9 @@
           toe_pos_offset_x(0.0), heel_pos_offset_x(0.0), toe_angle(0.0), heel_angle(0.0), foot_dif_rot_angle(0.0), toe_heel_dif_angle(0.0), use_toe_joint(false), use_toe_heel_auto_set(false),
           current_src_toe_heel_type(SOLE), current_dst_toe_heel_type(SOLE)
       {
-        support_leg_types = boost::assign::list_of<leg_type>(RLEG);
-        swing_leg_types = boost::assign::list_of<leg_type>(LLEG);
-        current_swing_time = boost::assign::list_of<double>(0.0)(0.0)(0.0)(0.0);
+        support_leg_types = boost::assign::list_of<leg_type>(RLEG).convert_to_container<std::vector<leg_type> >();
+        swing_leg_types = boost::assign::list_of<leg_type>(LLEG).convert_to_container<std::vector<leg_type> >();
+        current_swing_time = boost::assign::list_of<double>(0.0)(0.0)(0.0)(0.0).convert_to_container<std::vector<double> >();
         sdtg.set_dt(dt);
         cdktg.set_dt(dt);
         crdtg.set_dt(dt);
@@ -1113,9 +1113,9 @@
         velocity_mode_flg(VEL_IDLING), emergency_flg(IDLING), margin_time_ratio(0.01), footstep_modification_gain(5e-6),
         use_inside_step_limitation(true), use_stride_limitation(false), modify_footsteps(false), default_stride_limitation_type(SQUARE),
         preview_controller_ptr(NULL) {
-        swing_foot_zmp_offsets = boost::assign::list_of<hrp::Vector3>(hrp::Vector3::Zero());
-        prev_que_sfzos = boost::assign::list_of<hrp::Vector3>(hrp::Vector3::Zero());
-        leg_type_map = boost::assign::map_list_of<leg_type, std::string>(RLEG, "rleg")(LLEG, "lleg")(RARM, "rarm")(LARM, "larm");
+        swing_foot_zmp_offsets = boost::assign::list_of<hrp::Vector3>(hrp::Vector3::Zero()).convert_to_container<std::vector<hrp::Vector3> >();
+        prev_que_sfzos = boost::assign::list_of<hrp::Vector3>(hrp::Vector3::Zero()).convert_to_container<std::vector<hrp::Vector3> >();
+        leg_type_map = boost::assign::map_list_of<leg_type, std::string>(RLEG, "rleg")(LLEG, "lleg")(RARM, "rarm")(LARM, "larm").convert_to_container<std::map<leg_type, std::string> >();
         for (size_t i = 0; i < 4; i++) leg_margin[i] = 0.1;
         for (size_t i = 0; i < 5; i++) stride_limitation_for_circle_type[i] = 0.2;
         for (size_t i = 0; i < 5; i++) overwritable_stride_limitation[i] = 0.2;
