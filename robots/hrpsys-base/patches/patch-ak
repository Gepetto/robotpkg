Fix C++11 glitches with boost::assign

--- rtc/AutoBalancer/testGaitGenerator.cpp~	2017-08-05 00:10:49.000000000 +0200
+++ rtc/AutoBalancer/testGaitGenerator.cpp	2017-08-28 14:22:49.087425228 +0200
@@ -202,7 +202,7 @@
                 min_rfoot_pos(ii) = std::min(min_rfoot_pos(ii), rfoot_pos(ii));
                 max_rfoot_pos(ii) = std::max(max_rfoot_pos(ii), rfoot_pos(ii));
             }
-            tmp_string_vector = boost::assign::list_of("lleg");
+            tmp_string_vector = boost::assign::list_of("lleg").convert_to_container<std::vector<std::string> >();
             hrp::Vector3 lfoot_pos = (gg->get_support_leg_names() == tmp_string_vector) ? gg->get_support_leg_steps().front().worldcoords.pos : gg->get_swing_leg_steps().front().worldcoords.pos;
             for (size_t ii = 0; ii < 3; ii++) {
                 fprintf(fp_fpos, "%f ", lfoot_pos(ii));
@@ -214,13 +214,13 @@
 
             // Foot rot
             fprintf(fp_frot, "%f ", i * dt);
-            tmp_string_vector = boost::assign::list_of("rleg");
+            tmp_string_vector = boost::assign::list_of("rleg").convert_to_container<std::vector<std::string> >();
             hrp::Matrix33 rfoot_rot = (gg->get_support_leg_names() == tmp_string_vector) ? gg->get_support_leg_steps().front().worldcoords.rot : gg->get_swing_leg_steps().front().worldcoords.rot;
             hrp::Vector3 rfoot_rpy = hrp::rpyFromRot(rfoot_rot);
             for (size_t ii = 0; ii < 3; ii++) {
                 fprintf(fp_frot, "%f ", rad2deg(rfoot_rpy(ii)));
             }
-            tmp_string_vector = boost::assign::list_of("lleg");
+            tmp_string_vector = boost::assign::list_of("lleg").convert_to_container<std::vector<std::string> >();
             hrp::Matrix33 lfoot_rot = (gg->get_support_leg_names() == tmp_string_vector) ? gg->get_support_leg_steps().front().worldcoords.rot : gg->get_swing_leg_steps().front().worldcoords.rot;
             hrp::Vector3 lfoot_rpy = hrp::rpyFromRot(lfoot_rot);
             for (size_t ii = 0; ii < 3; ii++) {
@@ -231,12 +231,12 @@
 
             // ZMP offsets
             fprintf(fp_zoff, "%f ", i * dt);
-            tmp_string_vector = boost::assign::list_of("rleg");
+            tmp_string_vector = boost::assign::list_of("rleg").convert_to_container<std::vector<std::string> >();
             hrp::Vector3 rfoot_zmp_offset = (gg->get_support_leg_names() == tmp_string_vector) ? gg->get_support_foot_zmp_offsets().front() : gg->get_swing_foot_zmp_offsets().front();
             for (size_t ii = 0; ii < 3; ii++) {
                 fprintf(fp_zoff, "%f ", rfoot_zmp_offset(ii));
             }
-            tmp_string_vector = boost::assign::list_of("lleg");
+            tmp_string_vector = boost::assign::list_of("lleg").convert_to_container<std::vector<std::string> >();
             hrp::Vector3 lfoot_zmp_offset = (gg->get_support_leg_names() == tmp_string_vector) ? gg->get_support_foot_zmp_offsets().front() : gg->get_swing_foot_zmp_offsets().front();
             for (size_t ii = 0; ii < 3; ii++) {
                 fprintf(fp_zoff, "%f ", lfoot_zmp_offset(ii));
@@ -393,11 +393,11 @@
                 //   Foot pos and rot
                 std::vector<hrp::Vector3> tmpvec = boost::assign::list_of(rfoot_pos)(lfoot_pos);
                 footpos_diff_checker.checkValueDiff(tmpvec);
-                tmpvec = boost::assign::list_of(rfoot_rpy)(lfoot_rpy);
+                tmpvec = boost::assign::list_of(rfoot_rpy)(lfoot_rpy).convert_to_container<std::vector<hrp::Vector3> >();
                 footrot_diff_checker.checkValueDiff(tmpvec);
-                tmpvec = boost::assign::list_of(rfootpos_vel)(lfootpos_vel);
+                tmpvec = boost::assign::list_of(rfootpos_vel)(lfootpos_vel).convert_to_container<std::vector<hrp::Vector3> >();
                 footposvel_diff_checker.checkValueDiff(tmpvec);
-                tmpvec = boost::assign::list_of(rfootrot_vel)(lfootrot_vel);
+                tmpvec = boost::assign::list_of(rfootrot_vel)(lfootrot_vel).convert_to_container<std::vector<hrp::Vector3> >();
                 footrotvel_diff_checker.checkValueDiff(tmpvec);
                 //   Swing support mid coorsd
                 ssmcpos_diff_checker.checkValueDiff(tmp_ssmc.pos);
@@ -405,7 +405,7 @@
                 ssmcposvel_diff_checker.checkValueDiff(tmp_ssmcpos_vel);
                 ssmcrotvel_diff_checker.checkValueDiff(tmp_ssmcrot_vel);
                 //   ZMP offset
-                tmpvec = boost::assign::list_of(rfoot_zmp_offset)(lfoot_zmp_offset);
+                tmpvec = boost::assign::list_of(rfoot_zmp_offset)(lfoot_zmp_offset).convert_to_container<std::vector<hrp::Vector3> >();
                 zmpoffset_diff_checker.checkValueDiff(tmpvec);
             }
             //   If contact states are not change, prev_swing_support_time is not dt, otherwise prev_swing_support_time is dt.
