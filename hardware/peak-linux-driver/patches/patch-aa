--- driver/Makefile~	2012-05-22 14:22:50.000000000 +0200
+++ driver/Makefile	2012-05-30 16:42:56.233897000 +0200
@@ -88,9 +88,11 @@
 # whole makefile is based on availability of version.h file
 # do a forced stop if it is not available
 #
-HASVERSION_H := $(shell if test -f $(KERNEL_LOCATION)/include/linux/version.h ; then echo yes ; else echo no; fi )
+HASVERSION_H := $(wildcard \
+       $(KERNEL_LOCATION)/include/linux/version.h \
+       $(KERNEL_LOCATION)/include/generated/uapi/linux/version.h)
 
-ifeq ($(HASVERSION_H),no)
+ifeq (,$(HASVERSION_H))
 $(error "Can't find $(KERNEL_LOCATION)/include/linux/version.h !")
 else
 
@@ -98,7 +100,7 @@
 # removed old version retrival for better cross compile support
 # old VERSION := $(shell uname -r)
 #
-VERSION := $(shell cpp -E -dM -I$(KERNEL_LOCATION)/include $(KERNEL_LOCATION)/include/linux/version.h \
+VERSION := $(shell cpp -E -dM -I$(KERNEL_LOCATION)/include ${HASVERSION_H} \
             | grep UTS_RELEASE | sed -e 's;[^"]*"\(.*\)";\1;g')
 
 ifeq ($(VERSION),)
@@ -109,7 +109,7 @@
 #****************************************************************************
 # where the driver should be installed - change here for cross install
 #
-INSTALL_LOCATION = /lib/modules/$(VERSION)/misc
+INSTALL_LOCATION = ${PREFIX}/lib/modules/$(VERSION)/misc
 
 #****************************************************************************
 # get extracted kernel VERSION and PATCHLEVEL for comparison
@@ -280,11 +280,11 @@
 #****************************************************************************
 # for local installation only: sometimes /etc/modprobe.conf.local is used
 #
-MODCONF := $(shell if test -d /etc/modprobe.d ; then echo "/etc/modprobe.d/pcan.conf" ; else echo "/etc/modules.conf.local" ; fi )
+MODCONF := ${PREFIX}/etc/modprobe.conf.sample
 ifeq ($(UDEV), yes)
 MODINST  = "install pcan /sbin/modprobe --ignore-install pcan"
 else
-MODINST  = "install pcan /sbin/modprobe --ignore-install pcan; /usr/local/bin/pcan_make_devices 2"
+MODINST  = "install pcan /sbin/modprobe --ignore-install pcan; ${PREFIX}/bin/pcan_make_devices 2"
 endif
 
 #****************************************************************************
@@ -316,6 +318,8 @@
 all : message
 	$(CMDLINE)
 
+depend:
+
 else # <<<<< USEKBUILD >>>>>>
 
 #****************************************************************************
@@ -331,7 +331,7 @@
 # for local installation only: sometimes /etc/modules.conf.local is used
 #
 MODCONF = "/etc/modules.conf"
-MODINST = "post-install pcan /usr/local/bin/pcan_make_devices 2"
+MODINST = "post-install pcan ${PREFIX}/bin/pcan_make_devices 2"
 
 #****************************************************************************
 # what's the target
@@ -389,11 +389,11 @@
 	@if test -d $(INSTALL_LOCATION); then\
 		echo "Info: $(INSTALL_LOCATION) exists.";\
 	else\
-		mkdir $(INSTALL_LOCATION);\
+		mkdir -p $(INSTALL_LOCATION);\
 	fi
 	@cp -f $(TARGET) $(INSTALL_LOCATION)/$(TARGET)
-	@cp -f pcan_make_devices /usr/local/bin
-	@chmod 744 /usr/local/bin/pcan_make_devices
+	@cp -f pcan_make_devices ${PREFIX}/bin
+	@chmod 744 ${PREFIX}/bin/pcan_make_devices
 	@if [ ! -f $(MODCONF) ] || test -z $(shell grep -ls pcan $(MODCONF)) ; then\
 		cp $(MODCONF) $(MODCONF)~ 2> /dev/null;\
 		echo ""                                               >> $(MODCONF);\
@@ -407,8 +407,8 @@
 		echo "Info: Left current 'pcan'-entry in $(MODCONF) untouched.";\
 	fi
 	@if [ $(UDEV) = "yes" ]; then\
-		cp -f udev/pcan_usb_minor_check.bash /usr/local/bin;\
-		chmod 744 /usr/local/bin/pcan_usb_minor_check.bash;\
+		cp -f udev/pcan_usb_minor_check.bash ${PREFIX}/bin;\
+		chmod 744 ${PREFIX}/bin/pcan_usb_minor_check.bash;\
 		cp -f udev/45-pcan.rules /etc/udev/rules.d;\
 		echo "Info: Copied 45-pcan.rules to /etc/udev/rules.d.";\
 		for m in $(shell awk '/^blacklist/ { print $$2 }' udev/blacklist-peak.conf); do \
@@ -430,9 +430,9 @@
 	@-rmmod pcan 2> /dev/null
 	@rm -f $(INSTALL_LOCATION)/$(TARGET)
 	@rm -f /usr/include/pcan.h
-	@rm -f /usr/local/bin/pcan_make_devices
+	@rm -f ${PREFIX}/bin/pcan_make_devices
 	@rm -f /etc/udev/rules.d/45-pcan.rules
-	@rm -f /usr/local/bin/pcan_usb_minor_check.bash
+	@rm -f ${PREFIX}/bin/pcan_usb_minor_check.bash
 	@rm -f $(shell dirname $(MODCONF))/blacklist-peak.conf
 	@rm -f $(MODCONF)
 	@/sbin/depmod
