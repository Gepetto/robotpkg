py-pinocchio needs pinocchio

--- CMakeLists.txt.orig	2020-04-08 18:54:16.000000000 +0200
+++ CMakeLists.txt	2020-04-09 18:24:36.197619469 +0200
@@ -91,6 +91,7 @@
 # --- DEPENDENCIES -----------------------------------
 # ----------------------------------------------------
 ADD_REQUIRED_DEPENDENCY("eigen3 >= 3.0.5")
+ADD_PROJECT_DEPENDENCY(${PROJECT_NAME} REQUIRED)
 
 # Variable containing all the cflags definition relative to optional dependencies
 SET(CFLAGS_DEPENDENCIES)
--- bindings/python/CMakeLists.txt.orig	2020-04-29 09:23:03.000000000 +0200
+++ bindings/python/CMakeLists.txt	2020-05-15 17:11:05.029881361 +0200
@@ -128,7 +128,7 @@
   ADD_SOURCE_GROUP(${PYWRAP}_SOURCES)
   PKG_CONFIG_USE_DEPENDENCY(${PYWRAP} eigenpy)
 
-  TARGET_LINK_LIBRARIES(${PYWRAP} PUBLIC ${PROJECT_NAME})
+  TARGET_LINK_LIBRARIES(${PYWRAP} PUBLIC ${PROJECT_NAME}::${PROJECT_NAME})
   TARGET_LINK_BOOST_PYTHON(${PYWRAP} PUBLIC)
 
   IF(HPP_FCL_FOUND)
--- unittest/CMakeLists.txt.orig	2020-05-12 18:58:27.000000000 +0200
+++ unittest/CMakeLists.txt	2020-05-15 17:37:42.933743520 +0200
@@ -34,7 +34,7 @@
     PKG_CONFIG_USE_DEPENDENCY(${TEST_NAME} hpp-fcl)
   ENDIF(HPP_FCL_FOUND)
 
-  TARGET_LINK_LIBRARIES(${TEST_NAME} PUBLIC ${PROJECT_NAME})
+  TARGET_LINK_LIBRARIES(${TEST_NAME} PUBLIC ${PROJECT_NAME}::${PROJECT_NAME})
   TARGET_LINK_LIBRARIES(${TEST_NAME} PRIVATE ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
 ENDMACRO(ADD_PINOCCHIO_UNIT_TEST)
 
