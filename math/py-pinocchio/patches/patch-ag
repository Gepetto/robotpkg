py-pinocchio needs pinocchio

--- CMakeLists.txt.orig	2022-08-09 15:11:05.000000000 +0200
+++ CMakeLists.txt	2022-08-16 12:12:11.850288528 +0200
@@ -109,6 +108,7 @@
 # ----------------------------------------------------
 SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/find-external/CppAD/" ${CMAKE_MODULE_PATH})
 ADD_PROJECT_DEPENDENCY(Eigen3 REQUIRED PKG_CONFIG_REQUIRES "eigen3 >= 3.0.5")
+ADD_PROJECT_DEPENDENCY(${PROJECT_NAME} REQUIRED)
 
 # Variable containing all the cflags definition relative to optional dependencies
 SET(CFLAGS_DEPENDENCIES)
--- bindings/python/CMakeLists.txt.orig	2022-08-16 12:11:31.000000000 +0200
+++ bindings/python/CMakeLists.txt	2022-08-16 12:12:57.958530049 +0200
@@ -250,7 +246,7 @@
   ADD_HEADER_GROUP(${PYWRAP}_HEADERS)
   ADD_SOURCE_GROUP(${PYWRAP}_SOURCES)
 
-  TARGET_LINK_LIBRARIES(${PYWRAP} PUBLIC ${PROJECT_NAME})
+  TARGET_LINK_LIBRARIES(${PYWRAP} PUBLIC ${PROJECT_NAME}::${PROJECT_NAME})
   IF(BUILD_WITH_HPP_FCL_PYTHON_BINDINGS)
     TARGET_COMPILE_DEFINITIONS(${PYWRAP} PRIVATE -DPINOCCHIO_PYTHON_INTERFACE_WITH_HPP_FCL_PYTHON_BINDINGS)
   ENDIF(BUILD_WITH_HPP_FCL_PYTHON_BINDINGS)
--- unittest/CMakeLists.txt.orig	2022-08-09 15:11:05.000000000 +0200
+++ unittest/CMakeLists.txt	2022-08-16 12:14:21.270963591 +0200
@@ -34,9 +34,7 @@
     ADD_TEST_CFLAGS(${NAME} "-DNOMINMAX -D_USE_MATH_DEFINES")
   ENDIF(WIN32)
 
-  IF(NOT unit_test_HEADER_ONLY)
-    TARGET_LINK_LIBRARIES(${TEST_NAME} PUBLIC ${PROJECT_NAME})
-  ENDIF(NOT unit_test_HEADER_ONLY)
+    TARGET_LINK_LIBRARIES(${TEST_NAME} PUBLIC ${PROJECT_NAME}::${PROJECT_NAME})
   MODERNIZE_TARGET_LINK_LIBRARIES(${TEST_NAME} SCOPE PRIVATE
     TARGETS Boost::unit_test_framework
     LIBRARIES ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
--- examples/CMakeLists.txt.orig	2022-08-09 15:11:05.000000000 +0200
+++ examples/CMakeLists.txt	2022-08-16 12:17:21.391920703 +0200
@@ -6,7 +6,7 @@
   GET_FILENAME_COMPONENT(EXAMPLE_NAME ${EXAMPLE} NAME)
   SET(EXAMPLE_NAME "example-cpp-${EXAMPLE_NAME}")
   ADD_UNIT_TEST(${EXAMPLE_NAME} "${EXAMPLE}.cpp")
-  TARGET_LINK_LIBRARIES(${EXAMPLE_NAME} PUBLIC ${PROJECT_NAME})
+  TARGET_LINK_LIBRARIES(${EXAMPLE_NAME} PUBLIC ${PROJECT_NAME}::${PROJECT_NAME})
 ENDFUNCTION()
 
 SET(${PROJECT_NAME}_EXAMPLES
