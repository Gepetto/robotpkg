Don't pick up random source files (especially those under "PaxHeader" created
by pax-as-tar).

for ext in ['hpp', 'cpp']: 
    for i in Path('.').glob(f'**/*.{ext}'): print(f'  {i}')
    print()

--- bindings/python/CMakeLists.txt.orig	2020-02-15 10:14:47.000000000 +0100
+++ bindings/python/CMakeLists.txt	2020-02-21 12:14:35.614291893 +0100
@@ -53,28 +53,102 @@
   SET(${PYWRAP}_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/${PYTHON_SITELIB}/${PROJECT_NAME})
 ENDIF(BUILD_PYTHON_INTERFACE)
 
-FILE(GLOB_RECURSE ${PROJECT_NAME}_PYTHON_HEADERS
-     ${CMAKE_CURRENT_SOURCE_DIR}/*.hpp 
-     ) 
-
-FILE(GLOB_RECURSE ${PROJECT_NAME}_PYTHON_SOURCES
-     ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp 
-     ) 
-
-# Parser for Python model
-LIST(APPEND ${PROJECT_NAME}_PYTHON_HEADERS
-  parsers/python.hpp
-  )
-SET(${PROJECT_NAME}_PARSER_PYTHON_HEADERS
+SET(${PROJECT_NAME}_PYTHON_HEADERS
+  fwd.hpp
+  utils/registration.hpp
+  utils/std-vector.hpp
+  utils/copyable.hpp
+  utils/dependencies.hpp
+  utils/pickle-map.hpp
+  utils/conversions.hpp
+  utils/list.hpp
+  utils/namespace.hpp
+  utils/version.hpp
+  utils/constant.hpp
+  utils/pickle-vector.hpp
+  utils/printable.hpp
+  utils/std-aligned-vector.hpp
+  parsers/sample-models.hpp
+  parsers/srdf.hpp
   parsers/python.hpp
+  parsers/urdf.hpp
+  spatial/se3.hpp
+  spatial/motion.hpp
+  spatial/inertia.hpp
+  spatial/force.hpp
+  spatial/explog.hpp
+  algorithm/algorithms.hpp
+  serialization/serializable.hpp
+  multibody/model.hpp
+  multibody/data.hpp
+  multibody/geometry-model.hpp
+  multibody/geometry-object.hpp
+  multibody/frame.hpp
+  multibody/geometry-data.hpp
+  multibody/joint/joints-models.hpp
+  multibody/joint/joints-variant.hpp
+  multibody/joint/joints-datas.hpp
+  multibody/joint/joint-derived.hpp
+  multibody/joint/joint.hpp
+  multibody/fcl/collision-result.hpp
+  multibody/fcl/transform.hpp
+  multibody/fcl/mesh-loader.hpp
+  multibody/fcl/collision-geometry.hpp
+  multibody/fcl/distance-result.hpp
+  multibody/fcl/contact.hpp
   )
 
-LIST(APPEND ${PROJECT_NAME}_PYTHON_SOURCES
+SET(${PROJECT_NAME}_PYTHON_SOURCES
+  module.cpp
+  utils/version.cpp
+  utils/conversions.cpp
+  utils/dependencies.cpp
+  parsers/srdf.cpp
+  parsers/expose-parsers.cpp
+  parsers/sample-models.cpp
   parsers/python/model.cpp
+  parsers/urdf/geometry.cpp
+  parsers/urdf/model.cpp
+  math/expose-rpy.cpp
+  spatial/expose-SE3.cpp
+  spatial/expose-motion.cpp
+  spatial/expose-explog.cpp
+  spatial/expose-force.cpp
+  spatial/expose-inertia.cpp
+  spatial/expose-skew.cpp
+  algorithm/expose-rnea.cpp
+  algorithm/expose-regressor.cpp
+  algorithm/expose-centroidal-derivatives.cpp
+  algorithm/expose-com.cpp
+  algorithm/expose-kinematics-derivatives.cpp
+  algorithm/expose-kinematics.cpp
+  algorithm/expose-jacobian.cpp
+  algorithm/expose-algorithms.cpp
+  algorithm/expose-energy.cpp
+  algorithm/expose-geometry.cpp
+  algorithm/expose-crba.cpp
+  algorithm/expose-rnea-derivatives.cpp
+  algorithm/expose-frames.cpp
+  algorithm/expose-contact-dynamics.cpp
+  algorithm/expose-centroidal.cpp
+  algorithm/expose-cholesky.cpp
+  algorithm/expose-joints.cpp
+  algorithm/expose-aba.cpp
+  algorithm/expose-model.cpp
+  algorithm/expose-cat.cpp
+  algorithm/expose-aba-derivatives.cpp
+  multibody/expose-data.cpp
+  multibody/expose-geometry.cpp
+  multibody/expose-frame.cpp
+  multibody/expose-model.cpp
+  multibody/joint/expose-joints.cpp
+  multibody/fcl/expose-fcl.cpp
   )
 
-REMOVE_PATH_FROM_LIST("${${PROJECT_NAME}_PYTHON_HEADERS}" "${CMAKE_CURRENT_SOURCE_DIR}/" ${PROJECT_NAME}_PYTHON_HEADERS)
-REMOVE_PATH_FROM_LIST("${${PROJECT_NAME}_PYTHON_SOURCES}" "${CMAKE_CURRENT_SOURCE_DIR}/" ${PROJECT_NAME}_PYTHON_SOURCES)
+# Parser for Python model
+SET(${PROJECT_NAME}_PARSER_PYTHON_HEADERS
+  parsers/python.hpp
+  )
 
 # Python exposition of FCL
 IF(NOT BUILD_WITH_HPP_FCL_SUPPORT)
