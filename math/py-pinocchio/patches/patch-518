From 6d4f184aed4435bfa6f2ea6d2a195ed947af5f03 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Thu, 14 Jul 2022 16:09:47 +0200
Subject: [PATCH 01/11] modernize link

---
 base.cmake            |  1 +
 modernize-links.cmake | 38 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 39 insertions(+)
 create mode 100644 modernize-links.cmake

diff --git a/base.cmake b/base.cmake
index fcdd165..2ab34f0 100644
--- cmake/base.cmake
+++ cmake/base.cmake
@@ -121,6 +121,7 @@ INCLUDE(${CMAKE_CURRENT_LIST_DIR}/test.cmake)
 INCLUDE(${CMAKE_CURRENT_LIST_DIR}/oscheck.cmake)
 INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cxx-standard.cmake)
 INCLUDE(${CMAKE_CURRENT_LIST_DIR}/coverage.cmake)
+INCLUDE(${CMAKE_CURRENT_LIST_DIR}/modernize-links.cmake)
 
  # --------- #
  # Constants #
diff --git a/modernize-links.cmake b/modernize-links.cmake
new file mode 100644
index 0000000..c013c8f
--- /dev/null
+++ cmake/modernize-links.cmake
@@ -0,0 +1,38 @@
+#
+# Copyright (C) 2022 LAAS-CNRS
+#
+# Author: Guilhem Saurel
+#
+
+#.rst:
+# .. ifmode:: user
+#
+#   .. command:: MODERNIZE_LINK(target SCOPE <INTERFACE|PUBLIC|PRIVATE> TARGETS [targets...] LIBRARIES [libraries...]
+#   INCLUDE_DIRS [include_dirs...])
+#
+#      link "target" to modern "targets" if they are already defined, or fall back to old-school
+#      "libraries" and "include_dirs"
+#
+#
+
+macro(MODERNIZE_LINK TARGET)
+  set(options)
+  set(oneValueArgs SCOPE)
+  set(multiValueArgs TARGETS LIBRARIES INCLUDE_DIRS)
+  cmake_parse_arguments(MODERNIZE_LINK "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
+
+  set(_targets_available TRUE)
+  foreach(_tgt MODERNIZE_LINK_TARGETS)
+    if(NOT TARGET ${_tgt})
+      message(VERBOSE "${_tgt} is not available. Falling back to old-school links to libraries / include_dirs")
+      set(_targets_available FALSE)
+    endif()
+  endforeach()
+
+  if(_targets_available)
+    target_link_libraries(${target} ${MODERNIZE_LINK_SCOPE} ${MODERNIZE_LINK_TARGETS})
+  else()
+    target_link_libraries(${target} ${MODERNIZE_LINK_SCOPE} ${MODERNIZE_LINK_LIBRARIES})
+    target_include_directories(${target} SYSTEM ${MODERNIZE_LINK_SCOPE} ${MODERNIZE_LINK_INCLUDE_DIRS})
+  endif()
+endmacro()

From 8cf4d33539f70ba96558a3c72049ec1c7d59eb58 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Thu, 14 Jul 2022 16:15:23 +0200
Subject: [PATCH 02/11] modernize link to boost python

---
 boost.cmake | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/boost.cmake b/boost.cmake
index 3d99148..f6fb3d8 100644
--- cmake/boost.cmake
+++ cmake/boost.cmake
@@ -40,18 +40,18 @@ ENDIF(CMAKE_VERSION VERSION_LESS "3.12")
 # .. command:: SET_BOOST_DEFAULT_OPTIONS
 #
 #  This function allows to set up the default options for detecting Boost components.
-# 
+#
 MACRO(SET_BOOST_DEFAULT_OPTIONS)
   SET(Boost_USE_STATIC_LIBS OFF)
   SET(Boost_USE_MULTITHREADED ON)
-  SET(Boost_NO_BOOST_CMAKE ON) 
+  SET(Boost_NO_BOOST_CMAKE ON)
 ENDMACRO(SET_BOOST_DEFAULT_OPTIONS)
 
 #.rst:
 # .. command:: EXPORT_BOOST_DEFAULT_OPTIONS
 #
 #  This function allows to export the default options for detecting Boost components.
-# 
+#
 MACRO(EXPORT_BOOST_DEFAULT_OPTIONS)
   LIST(INSERT _PACKAGE_CONFIG_DEPENDENCIES_FIND_PACKAGE 0 "SET(Boost_USE_STATIC_LIBS OFF);SET(Boost_USE_MULTITHREADED ON);SET(Boost_NO_BOOST_CMAKE ON)")
   LIST(INSERT _PACKAGE_CONFIG_DEPENDENCIES_FIND_DEPENDENCY 0 "SET(Boost_USE_STATIC_LIBS OFF);SET(Boost_USE_MULTITHREADED ON);SET(Boost_NO_BOOST_CMAKE ON)")
@@ -238,17 +238,23 @@ MACRO(TARGET_LINK_BOOST_PYTHON target)
     SET(PUBLIC_KEYWORD ${ARGV1})
   ENDIF()
 
+  IF(TARGET Boost::Python3${Python3_VERSION_MINOR})
+    set(_boost_python_link Boost::Python3${Python3_VERSION_MINOR})
+  ELSE()
+    set(_boost_python_link ${Boost_PYTHON_LIBRARIES})
+  ENDIF()
+
   IF(APPLE)
     GET_TARGET_PROPERTY(TARGET_TYPE ${target} TYPE)
 
     IF(${TARGET_TYPE} MATCHES EXECUTABLE)
-      TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${Boost_PYTHON_LIBRARY})
+      TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${_boost_python_link})
     ELSE(${TARGET_TYPE} MATCHES EXECUTABLE)
       TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} -Wl,-undefined,dynamic_lookup,${Boost_PYTHON_LIBRARIES})
     ENDIF(${TARGET_TYPE} MATCHES EXECUTABLE)
 
   ELSE(APPLE)
-    TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${Boost_PYTHON_LIBRARY})
+    TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${_boost_python_link})
   ENDIF(APPLE)
   LIST(APPEND LOGGING_WATCHED_VARIABLES
     Boost_PYTHON_LIBRARIES

From a9184e61d03199fdb7bb57ad4d03348bb09f32b9 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Thu, 14 Jul 2022 16:41:59 +0200
Subject: [PATCH 03/11] allow Development.Module & NumPy on older CMake

---
 python.cmake | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/python.cmake b/python.cmake
index b4b45ec..a21d5f6 100644
--- cmake/python.cmake
+++ cmake/python.cmake
@@ -66,6 +66,18 @@ MACRO(FINDPYTHON)
   IF(NOT PYTHON_COMPONENTS)
     SET(PYTHON_COMPONENTS Interpreter Development)
   ENDIF()
+  IF(CMAKE_VERSION VERSION_LESS "3.18" AND Development.Module IN_LIST PYTHON_COMPONENTS)
+    MESSAGE(WARNING "For CMake < 3.18, Development.Module is not available. Falling back to Development")
+    LIST(REMOVE_ITEM PYTHON_COMPONENTS Development.Module)
+    SET(PYTHON_COMPONENTS ${PYTHON_COMPONENTS} Development)
+  ENDIF()
+  IF(NumPy IN_LIST PYTHON_COMPONENTS)
+    IF(CMAKE_VERSION VERSION_LESS "3.14")
+      MESSAGE(WARNING "For CMake < 3.14, NumPy is not available. Falling back to custom FIND_NUMPY()")
+      LIST(REMOVE_ITEM PYTHON_COMPONENTS NumPy)
+      FIND_NUMPY()
+    ENDIF()
+  ENDIF()
   IF(NOT CMAKE_VERSION VERSION_LESS "3.12" AND NOT WIN32)
 
     IF(DEFINED PYTHON_EXECUTABLE OR DEFINED Python_EXECUTABLE)

From 651411e8740921e22db743d703bad72520a2ea4c Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Thu, 14 Jul 2022 16:46:43 +0200
Subject: [PATCH 04/11] add TARGET_LINK_NUMPY

---
 python.cmake | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/python.cmake b/python.cmake
index a21d5f6..6a45215 100644
--- cmake/python.cmake
+++ cmake/python.cmake
@@ -572,3 +572,19 @@ MACRO(FIND_NUMPY)
     MESSAGE(STATUS "  NUMPY_VERSION=${NUMPY_VERSION}")
   ENDIF()
 ENDMACRO()
+
+#.rst:
+# .. command:: TARGET_LINK_NUMPY(TARGET [<INTERFACE|PUBLIC|PRIVATE>])
+#
+#   Link to Python3::NumPy if available, or add NUMPY_INCLUDE_DIR
+#
+MACRO(TARGET_LINK_NUMPY target)
+  IF(${ARGC} GREATER 1)
+    SET(PUBLIC_KEYWORD ${ARGV1})
+  ENDIF()
+  IF(TARGET Python3::NumPy)
+    TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} Python3::NumPy)
+  ELSE()
+    TARGET_INCLUDE_DIRECTORIES(${target} ${PUBLIC_KEYWORD} ${NUMPY_INCLUDE_DIR})
+  ENDIF()
+ENDMACRO()

From 28ca6552bf05d381b86f672c9d42731a43515306 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Thu, 14 Jul 2022 22:52:50 +0200
Subject: [PATCH 05/11] fixes

---
 boost.cmake           | 16 ++++++++--------
 modernize-links.cmake |  4 ++--
 python.cmake          | 20 +++++++++++---------
 3 files changed, 21 insertions(+), 19 deletions(-)

diff --git a/boost.cmake b/boost.cmake
index f6fb3d8..6263f3a 100644
--- cmake/boost.cmake
+++ cmake/boost.cmake
@@ -238,23 +238,23 @@ MACRO(TARGET_LINK_BOOST_PYTHON target)
     SET(PUBLIC_KEYWORD ${ARGV1})
   ENDIF()
 
-  IF(TARGET Boost::Python3${Python3_VERSION_MINOR})
-    set(_boost_python_link Boost::Python3${Python3_VERSION_MINOR})
-  ELSE()
-    set(_boost_python_link ${Boost_PYTHON_LIBRARIES})
-  ENDIF()
-
   IF(APPLE)
     GET_TARGET_PROPERTY(TARGET_TYPE ${target} TYPE)
 
     IF(${TARGET_TYPE} MATCHES EXECUTABLE)
-      TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${_boost_python_link})
+      TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${Boost_PYTHON_LIBRARIES})
     ELSE(${TARGET_TYPE} MATCHES EXECUTABLE)
       TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} -Wl,-undefined,dynamic_lookup,${Boost_PYTHON_LIBRARIES})
     ENDIF(${TARGET_TYPE} MATCHES EXECUTABLE)
 
+    TARGET_INCLUDE_DIRECTORIES(${target} SYSTEM ${PUBLIC_KEYWORD} ${Boost_INCLUDE_DIR})
   ELSE(APPLE)
-    TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${_boost_python_link})
+    IF(TARGET Boost::python3${Python3_VERSION_MINOR})
+      TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} Boost::python3${Python3_VERSION_MINOR})
+    ELSE()
+      TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${Boost_PYTHON_LIBRARIES})
+      TARGET_INCLUDE_DIRECTORIES(${target} SYSTEM ${PUBLIC_KEYWORD} ${Boost_INCLUDE_DIR})
+    ENDIF()
   ENDIF(APPLE)
   LIST(APPEND LOGGING_WATCHED_VARIABLES
     Boost_PYTHON_LIBRARIES
diff --git a/modernize-links.cmake b/modernize-links.cmake
index c013c8f..746425f 100644
--- cmake/modernize-links.cmake
+++ cmake/modernize-links.cmake
@@ -15,14 +15,14 @@
 #
 #
 
-macro(MODERNIZE_LINK TARGET)
+macro(MODERNIZE_LINK target)
   set(options)
   set(oneValueArgs SCOPE)
   set(multiValueArgs TARGETS LIBRARIES INCLUDE_DIRS)
   cmake_parse_arguments(MODERNIZE_LINK "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
 
   set(_targets_available TRUE)
-  foreach(_tgt MODERNIZE_LINK_TARGETS)
+  foreach(_tgt ${MODERNIZE_LINK_TARGETS})
     if(NOT TARGET ${_tgt})
       message(VERBOSE "${_tgt} is not available. Falling back to old-school links to libraries / include_dirs")
       set(_targets_available FALSE)
diff --git a/python.cmake b/python.cmake
index 6a45215..948d685 100644
--- cmake/python.cmake
+++ cmake/python.cmake
@@ -66,16 +66,18 @@ MACRO(FINDPYTHON)
   IF(NOT PYTHON_COMPONENTS)
     SET(PYTHON_COMPONENTS Interpreter Development)
   ENDIF()
-  IF(CMAKE_VERSION VERSION_LESS "3.18" AND Development.Module IN_LIST PYTHON_COMPONENTS)
-    MESSAGE(WARNING "For CMake < 3.18, Development.Module is not available. Falling back to Development")
-    LIST(REMOVE_ITEM PYTHON_COMPONENTS Development.Module)
-    SET(PYTHON_COMPONENTS ${PYTHON_COMPONENTS} Development)
-  ENDIF()
-  IF(NumPy IN_LIST PYTHON_COMPONENTS)
+  IF(CMAKE_VERSION VERSION_LESS "3.18")
+    IF("Development.Module" IN_LIST PYTHON_COMPONENTS)
+      MESSAGE(WARNING "For CMake < 3.18, Development.Module is not available. Falling back to Development")
+      LIST(REMOVE_ITEM PYTHON_COMPONENTS Development.Module)
+      SET(PYTHON_COMPONENTS ${PYTHON_COMPONENTS} Development)
+    ENDIF()
     IF(CMAKE_VERSION VERSION_LESS "3.14")
-      MESSAGE(WARNING "For CMake < 3.14, NumPy is not available. Falling back to custom FIND_NUMPY()")
-      LIST(REMOVE_ITEM PYTHON_COMPONENTS NumPy)
-      FIND_NUMPY()
+      IF("NumPy" IN_LIST PYTHON_COMPONENTS)
+        MESSAGE(WARNING "For CMake < 3.14, NumPy is not available. Falling back to custom FIND_NUMPY()")
+        LIST(REMOVE_ITEM PYTHON_COMPONENTS NumPy)
+        FIND_NUMPY()
+      ENDIF()
     ENDIF()
   ENDIF()
   IF(NOT CMAKE_VERSION VERSION_LESS "3.12" AND NOT WIN32)

From 8776d5be3906f7ff00e605a79f96a12641fdbe41 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Thu, 14 Jul 2022 23:08:22 +0200
Subject: [PATCH 06/11] oops

---
 boost.cmake | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/boost.cmake b/boost.cmake
index 6263f3a..b682b3a 100644
--- cmake/boost.cmake
+++ cmake/boost.cmake
@@ -242,7 +242,7 @@ MACRO(TARGET_LINK_BOOST_PYTHON target)
     GET_TARGET_PROPERTY(TARGET_TYPE ${target} TYPE)
 
     IF(${TARGET_TYPE} MATCHES EXECUTABLE)
-      TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${Boost_PYTHON_LIBRARIES})
+      TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${Boost_PYTHON_LIBRARY})
     ELSE(${TARGET_TYPE} MATCHES EXECUTABLE)
       TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} -Wl,-undefined,dynamic_lookup,${Boost_PYTHON_LIBRARIES})
     ENDIF(${TARGET_TYPE} MATCHES EXECUTABLE)

From 9d6ba210c26a330e7bfff9efea9e41c69beb7025 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Thu, 14 Jul 2022 23:10:56 +0200
Subject: [PATCH 07/11] remove TARGET_LINK_NUMPY

---
 python.cmake | 16 ----------------
 1 file changed, 16 deletions(-)

diff --git a/python.cmake b/python.cmake
index 948d685..4c9cd3b 100644
--- cmake/python.cmake
+++ cmake/python.cmake
@@ -574,19 +574,3 @@ MACRO(FIND_NUMPY)
     MESSAGE(STATUS "  NUMPY_VERSION=${NUMPY_VERSION}")
   ENDIF()
 ENDMACRO()
-
-#.rst:
-# .. command:: TARGET_LINK_NUMPY(TARGET [<INTERFACE|PUBLIC|PRIVATE>])
-#
-#   Link to Python3::NumPy if available, or add NUMPY_INCLUDE_DIR
-#
-MACRO(TARGET_LINK_NUMPY target)
-  IF(${ARGC} GREATER 1)
-    SET(PUBLIC_KEYWORD ${ARGV1})
-  ENDIF()
-  IF(TARGET Python3::NumPy)
-    TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} Python3::NumPy)
-  ELSE()
-    TARGET_INCLUDE_DIRECTORIES(${target} ${PUBLIC_KEYWORD} ${NUMPY_INCLUDE_DIR})
-  ENDIF()
-ENDMACRO()

From 49483fa1258e90f8d3e5de923b60864cc583e7a0 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Fri, 15 Jul 2022 00:07:57 +0200
Subject: [PATCH 08/11] implement IN_LIST form CMake < 3.3

---
 python.cmake | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/python.cmake b/python.cmake
index 4c9cd3b..0f1a3c8 100644
--- cmake/python.cmake
+++ cmake/python.cmake
@@ -67,13 +67,17 @@ MACRO(FINDPYTHON)
     SET(PYTHON_COMPONENTS Interpreter Development)
   ENDIF()
   IF(CMAKE_VERSION VERSION_LESS "3.18")
-    IF("Development.Module" IN_LIST PYTHON_COMPONENTS)
+    #IF("Development.Module" IN_LIST PYTHON_COMPONENTS) -- require CMake 3.3
+    LIST(FIND PYTHON_COMPONENTS "Development.Module" _index)
+    IF(NOT ${_index} EQUAL -1)
       MESSAGE(WARNING "For CMake < 3.18, Development.Module is not available. Falling back to Development")
       LIST(REMOVE_ITEM PYTHON_COMPONENTS Development.Module)
       SET(PYTHON_COMPONENTS ${PYTHON_COMPONENTS} Development)
     ENDIF()
     IF(CMAKE_VERSION VERSION_LESS "3.14")
-      IF("NumPy" IN_LIST PYTHON_COMPONENTS)
+      #IF("NumPy" IN_LIST PYTHON_COMPONENTS) -- require CMake 3.3
+      LIST(FIND PYTHON_COMPONENTS "NumPy" _npindex)
+      IF(NOT ${_npindex} EQUAL -1)
         MESSAGE(WARNING "For CMake < 3.14, NumPy is not available. Falling back to custom FIND_NUMPY()")
         LIST(REMOVE_ITEM PYTHON_COMPONENTS NumPy)
         FIND_NUMPY()

From d4364c0a42200dc29553306131cc25a65f8b0b5f Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Fri, 15 Jul 2022 00:15:50 +0200
Subject: [PATCH 09/11] linking to boost python require python headers

---
 boost.cmake | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/boost.cmake b/boost.cmake
index b682b3a..97f5e2e 100644
--- cmake/boost.cmake
+++ cmake/boost.cmake
@@ -253,7 +253,7 @@ MACRO(TARGET_LINK_BOOST_PYTHON target)
       TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} Boost::python3${Python3_VERSION_MINOR})
     ELSE()
       TARGET_LINK_LIBRARIES(${target} ${PUBLIC_KEYWORD} ${Boost_PYTHON_LIBRARIES})
-      TARGET_INCLUDE_DIRECTORIES(${target} SYSTEM ${PUBLIC_KEYWORD} ${Boost_INCLUDE_DIR})
+      TARGET_INCLUDE_DIRECTORIES(${target} SYSTEM ${PUBLIC_KEYWORD} ${Boost_INCLUDE_DIR} ${PYTHON_INCLUDE_DIR})
     ENDIF()
   ENDIF(APPLE)
   LIST(APPEND LOGGING_WATCHED_VARIABLES

From 6491546e5a27363f759cfd2f7bb522dcaa03b5c3 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Fri, 15 Jul 2022 01:01:21 +0200
Subject: [PATCH 10/11] FIND_NUMPY call must be done at the end of FINDPYTHON

---
 python.cmake | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/python.cmake b/python.cmake
index 0f1a3c8..cf172f9 100644
--- cmake/python.cmake
+++ cmake/python.cmake
@@ -80,7 +80,6 @@ MACRO(FINDPYTHON)
       IF(NOT ${_npindex} EQUAL -1)
         MESSAGE(WARNING "For CMake < 3.14, NumPy is not available. Falling back to custom FIND_NUMPY()")
         LIST(REMOVE_ITEM PYTHON_COMPONENTS NumPy)
-        FIND_NUMPY()
       ENDIF()
     ENDIF()
   ENDIF()
@@ -271,6 +270,15 @@ MACRO(FINDPYTHON)
     ENDIF()
   ENDIF()
 
+  # Call FIND_NUMPY if necessary
+  IF(CMAKE_VERSION VERSION_LESS "3.14")
+    #IF("NumPy" IN_LIST PYTHON_COMPONENTS) -- require CMake 3.3
+    LIST(FIND PYTHON_COMPONENTS "NumPy" _npindex)
+    IF(NOT ${_npindex} EQUAL -1)
+      FIND_NUMPY()
+    ENDIF()
+  ENDIF()
+
   # Log Python variables
   LIST(APPEND LOGGING_WATCHED_VARIABLES
     PYTHONINTERP_FOUND

From 63a6aaf17f0cc2b32fd41cfa012aabbac3cb007e Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Fri, 15 Jul 2022 11:09:27 +0200
Subject: [PATCH 11/11] rename into MODERNIZE_TARGET_LINK_LIBRARIES

---
 modernize-links.cmake | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/modernize-links.cmake b/modernize-links.cmake
index 746425f..fd1b7fb 100644
--- cmake/modernize-links.cmake
+++ cmake/modernize-links.cmake
@@ -7,15 +7,17 @@
 #.rst:
 # .. ifmode:: user
 #
-#   .. command:: MODERNIZE_LINK(target SCOPE <INTERFACE|PUBLIC|PRIVATE> TARGETS [targets...] LIBRARIES [libraries...]
-#   INCLUDE_DIRS [include_dirs...])
+#   .. command:: MODERNIZE_TARGET_LINK_LIBRARIES(target SCOPE <INTERFACE|PUBLIC|PRIVATE>
+#                 TARGETS [targets...]
+#                 LIBRARIES [libraries...]
+#                 INCLUDE_DIRS [include_dirs...])
 #
 #      link "target" to modern "targets" if they are already defined, or fall back to old-school
 #      "libraries" and "include_dirs"
 #
 #
 
-macro(MODERNIZE_LINK target)
+macro(MODERNIZE_TARGET_LINK_LIBRARIES target)
   set(options)
   set(oneValueArgs SCOPE)
   set(multiValueArgs TARGETS LIBRARIES INCLUDE_DIRS)
