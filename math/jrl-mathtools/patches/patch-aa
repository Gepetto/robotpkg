Fix build on x86_64 with -Werror

--- include/jrl/mathtools/matrixnxp.hh~	2011-06-24 15:03:55.000000000 +0200
+++ include/jrl/mathtools/matrixnxp.hh	2011-10-28 12:08:44.082548201 +0200
@@ -65,7 +65,7 @@
 			    vectorN* Sref = 0,
 			    matrixNxP* Vref = 0)
   {
-    unsigned int NR = 0, NC = 0;
+    matrixNxP::size_type NR = 0, NC = 0;
     bool toTranspose = false;
     boost_ublas::matrix<double,boost_ublas::column_major> transpOrNot;
 
@@ -97,7 +97,9 @@
       double vw;
       int lw=-1;
 
-      int linfo; const int n=NR,m=NC;
+      int linfo;
+      /* XXX BLAS expects integers, while matrix size is size_t */
+      const int n=static_cast<int>(NR),m=static_cast<int>(NC);
       int lda = std::max(m,n);
       int lu = traits::leading_dimension(U); // NR
       int lvt = traits::leading_dimension(VT); // NC
@@ -121,7 +123,7 @@
     }
 
 
-    const unsigned int nsv = s.size();
+    const matrixNxP::size_type nsv = s.size();
     unsigned int rankJ = 0;
     boost_ublas::vector<double> sp(nsv);
     for( unsigned int i=0;i<nsv;++i )
@@ -171,7 +173,7 @@
 			   vectorN* Sref = 0,
 			   matrixNxP* Vref = 0)
     {
-      unsigned int NR,NC;
+      matrixNxP::size_type NR,NC;
       bool toTranspose;
       boost_ublas::matrix<double,boost_ublas::column_major> I;
 
@@ -205,7 +207,9 @@
 	{
 	  double vw;
 
-	  int linfo; const int n=NR,m=NC;
+	  int linfo;
+          /* XXX BLAS expects integers, while matrix size is size_t */
+          const int n=static_cast<int>(NR),m=static_cast<int>(NC);
 	  int lda = std::max(m,n);
 	  int lu = traits::leading_dimension(U); // NR
 	  int lvt = traits::leading_dimension(VT); // NC
@@ -229,7 +233,7 @@
 
       }
 
-      const unsigned int nsv = s.size();
+      const matrixNxP::size_type nsv = s.size();
       unsigned int rankJ = 0;
       boost_ublas::vector<double> sp(nsv);
       for( unsigned int i=0;i<nsv;++i )
