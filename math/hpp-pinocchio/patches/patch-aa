From 01c147f9ded92315b8579870b9706cfc8b4a5ec7 Mon Sep 17 00:00:00 2001
From: Joseph Mirabel <jmirabel@laas.fr>
Date: Wed, 17 Jul 2019 16:47:00 +0200
Subject: [PATCH] Update to Pinocchio 2.1.5

---
 include/hpp/pinocchio/joint-collection.hh | 11 ++++++++++-
 include/hpp/pinocchio/liegroup.hh         | 15 +++++++++++++--
 src/configuration.cc                      |  2 +-
 src/device.cc                             |  6 +++---
 src/joint.cc                              |  2 +-
 src/joint/bound.hh                        |  4 ++--
 6 files changed, 30 insertions(+), 10 deletions(-)

diff --git a/include/hpp/pinocchio/joint-collection.hh b/include/hpp/pinocchio/joint-collection.hh
index dcad14d..139c991 100644
--- include/hpp/pinocchio/joint-collection.hh
+++ include/hpp/pinocchio/joint-collection.hh
@@ -28,6 +28,7 @@
 #include "pinocchio/multibody/joint/joint-planar.hpp"
 #include "pinocchio/multibody/joint/joint-prismatic.hpp"
 #include "pinocchio/multibody/joint/joint-revolute-unaligned.hpp"
+#include "pinocchio/multibody/joint/joint-revolute-unbounded-unaligned.hpp"
 #include "pinocchio/multibody/joint/joint-prismatic-unaligned.hpp"
 #include "pinocchio/multibody/joint/joint-revolute.hpp"
 #include "pinocchio/multibody/joint/joint-revolute-unbounded.hpp"
@@ -56,7 +57,10 @@ namespace hpp {
       typedef ::pinocchio::JointModelRevoluteUnboundedTpl<Scalar,Options,0> JointModelRUBX;
       typedef ::pinocchio::JointModelRevoluteUnboundedTpl<Scalar,Options,1> JointModelRUBY;
       typedef ::pinocchio::JointModelRevoluteUnboundedTpl<Scalar,Options,2> JointModelRUBZ;
-      
+
+      // Joint Revolute Unbounded Unaligned
+      typedef ::pinocchio::JointModelRevoluteUnboundedUnalignedTpl<Scalar,Options> JointModelRevoluteUnboundedUnaligned;
+
       // Joint Prismatic
       typedef ::pinocchio::JointModelPrismaticTpl<Scalar,Options,0> JointModelPX;
       typedef ::pinocchio::JointModelPrismaticTpl<Scalar,Options,1> JointModelPY;
@@ -88,6 +92,7 @@ namespace hpp {
       JointModelRX, JointModelRY, JointModelRZ
       , JointModelFreeFlyer, JointModelPlanar
       , JointModelRevoluteUnaligned
+      , JointModelRevoluteUnboundedUnaligned
       , JointModelPX, JointModelPY, JointModelPZ
       , JointModelPrismaticUnaligned
       , JointModelTranslation
@@ -107,6 +112,9 @@ namespace hpp {
       typedef ::pinocchio::JointDataRevoluteUnboundedTpl<Scalar,Options,0> JointDataRUBX;
       typedef ::pinocchio::JointDataRevoluteUnboundedTpl<Scalar,Options,1> JointDataRUBY;
       typedef ::pinocchio::JointDataRevoluteUnboundedTpl<Scalar,Options,2> JointDataRUBZ;
+    
+      // Joint Revolute Unbounded Unaligned
+      typedef ::pinocchio::JointDataRevoluteUnboundedUnalignedTpl<Scalar,Options> JointDataRevoluteUnboundedUnaligned;
       
       // Joint Prismatic
       typedef ::pinocchio::JointDataPrismaticTpl<Scalar,Options,0> JointDataPX;
@@ -139,6 +147,7 @@ namespace hpp {
       JointDataRX, JointDataRY, JointDataRZ
       , JointDataFreeFlyer, JointDataPlanar
       , JointDataRevoluteUnaligned
+      , JointDataRevoluteUnboundedUnaligned
       , JointDataPX, JointDataPY, JointDataPZ
       , JointDataPrismaticUnaligned
       , JointDataTranslation
diff --git a/include/hpp/pinocchio/liegroup.hh b/include/hpp/pinocchio/liegroup.hh
index f0cf475..9ee3b85 100644
--- include/hpp/pinocchio/liegroup.hh
+++ include/hpp/pinocchio/liegroup.hh
@@ -29,6 +29,8 @@
 
 namespace hpp {
   namespace pinocchio {
+    typedef ::pinocchio::JointModelCompositeTpl<value_type, 0, JointCollectionTpl> JointModelComposite;
+
     /// This class maps at compile time a joint type to a lie group type.
     ///
     /// JointModelPlanar (JointModelFreeFlyer resp.) maps to
@@ -53,7 +55,7 @@ namespace hpp {
 
     /// \cond
     //---------------- RnxSOnLieGroupMap -------------------------------//
-    // JointModelRevolute, JointModelRevoluteUnbounded, JointModelRevoluteUnaligned
+    // JointModelRevolute, JointModelRevoluteUnbounded, JointModelRevoluteUnaligned, JointModelRevoluteUnboundedUnaligned
     template<typename Scalar, int Options, int Axis>
     struct RnxSOnLieGroupMap::operation < ::pinocchio::JointModelRevoluteTpl<Scalar, Options, Axis> > {
       typedef liegroup::VectorSpaceOperation<1, true> type;
@@ -66,6 +68,10 @@ namespace hpp {
     struct RnxSOnLieGroupMap::operation < ::pinocchio::JointModelRevoluteUnalignedTpl<Scalar, Options> > {
       typedef liegroup::VectorSpaceOperation<1, true> type;
     };
+    template<typename Scalar, int Options>
+    struct RnxSOnLieGroupMap::operation < ::pinocchio::JointModelRevoluteUnboundedUnalignedTpl<Scalar, Options> > {
+      typedef liegroup::SpecialOrthogonalOperation<2> type;
+    };
 
     // JointModelPrismaticTpl, JointModelPrismaticUnaligned, JointModelTranslation
     template<typename Scalar, int Options, int Axis>
@@ -109,7 +115,7 @@ namespace hpp {
 
     //---------------- DefaultLieGroupMap ------------------------------------//
 
-    // JointModelRevolute, JointModelRevoluteUnbounded, JointModelRevoluteUnaligned
+    // JointModelRevolute, JointModelRevoluteUnbounded, JointModelRevoluteUnaligned, JointModelRevoluteUnboundedUnaligned
     template<typename Scalar, int Options, int Axis>
     struct DefaultLieGroupMap::operation < ::pinocchio::JointModelRevoluteTpl<Scalar, Options, Axis> > {
       typedef liegroup::VectorSpaceOperation<1, true> type;
@@ -122,6 +128,11 @@ namespace hpp {
     struct DefaultLieGroupMap::operation < ::pinocchio::JointModelRevoluteUnalignedTpl<Scalar, Options> > {
       typedef liegroup::VectorSpaceOperation<1, true> type;
     };
+    template<typename Scalar, int Options>
+    struct DefaultLieGroupMap::operation < ::pinocchio::JointModelRevoluteUnboundedUnalignedTpl<Scalar, Options> > {
+      typedef liegroup::SpecialOrthogonalOperation<2> type;
+    };
+
 
     // JointModelPrismaticTpl, JointModelPrismaticUnaligned, JointModelTranslation
     template<typename Scalar, int Options, int Axis>
diff --git a/src/configuration.cc b/src/configuration.cc
index 1b91d93..5b579b5 100644
--- src/configuration.cc
+++ src/configuration.cc
@@ -224,7 +224,7 @@ namespace hpp {
     };
 
     template<>
-    void IsNormalizedStep::algo< ::pinocchio::JointModelComposite>(const ::pinocchio::JointModelBase< ::pinocchio::JointModelComposite> & jmodel,
+    void IsNormalizedStep::algo< JointModelComposite>(const ::pinocchio::JointModelBase< JointModelComposite> & jmodel,
                      ConfigurationIn_t q,
                      const value_type & eps,
                      bool & ret)
diff --git a/src/device.cc b/src/device.cc
index c3bcef7..36bc31f 100644
--- src/device.cc
+++ src/device.cc
@@ -411,8 +411,8 @@ namespace hpp {
     };
 
     template <>
-    void AABBStep::algo< ::pinocchio::JointModelComposite >(
-        const ::pinocchio::JointModelBase< ::pinocchio::JointModelComposite > & jmodel,
+    void AABBStep::algo< JointModelComposite >(
+        const ::pinocchio::JointModelBase< JointModelComposite > & jmodel,
         const Model& model,
         Configuration_t q,
         bool initializeAABB,
@@ -421,7 +421,7 @@ namespace hpp {
       // TODO this should for but I did not test it.
       hppDout(warning, "Computing AABB of JointModelComposite should work but has never been tested");
       if (initializeAABB)  {
-        ::pinocchio::JointModelComposite::JointDataDerived data = jmodel.createData();
+        JointModelComposite::JointDataDerived data = jmodel.createData();
         jmodel.calc(data, q);
         aabb = fcl::AABB(data.M.translation());
       }
diff --git a/src/joint.cc b/src/joint.cc
index d2b347b..1aaabef 100644
--- src/joint.cc
+++ src/joint.cc
@@ -530,7 +530,7 @@ namespace hpp {
         space *= LiegroupSpace::create (LG_t());
       }
 
-      static void _algo (const ::pinocchio::JointModelComposite& jmodel,
+      static void _algo (const JointModelComposite& jmodel,
                        LiegroupSpace& space)
       {
         ::pinocchio::details::Dispatch<ConfigSpaceVisitor>::run(jmodel,
diff --git a/src/joint/bound.hh b/src/joint/bound.hh
index 1ef8195..aac8e05 100644
--- src/joint/bound.hh
+++ src/joint/bound.hh
@@ -40,8 +40,8 @@ namespace hpp {
       };
 
       template <>
-      void SetBoundStep::algo< ::pinocchio::JointModelComposite>(
-          const ::pinocchio::JointModelBase< ::pinocchio::JointModelComposite> & jmodel,
+      void SetBoundStep::algo<JointModelComposite>(
+          const ::pinocchio::JointModelBase<JointModelComposite> & jmodel,
           ConfigurationIn_t bounds,
           Configuration_t & out)
       {
-- 
2.22.0

