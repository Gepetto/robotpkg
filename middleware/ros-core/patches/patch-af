Fix the boost location detection so that it actually handles ROS_BOOST_ROOT:
 - is_system_install was always true, preventing to get the correct
   cflags/ldflags
 - remove a suspicious 'sort' on the boost locations found so that the order of
   preference is actually used
 - statically configure the default boost location for future use of this
    script (when manually installing other ros components).

--- tools/rosboost_cfg/src/rosboost_cfg/rosboost_cfg.py~	2011-08-03 22:59:14.000000000 +0200
+++ tools/rosboost_cfg/src/rosboost_cfg/rosboost_cfg.py	2011-11-17 22:32:02.000000000 +0100
@@ -84,7 +84,10 @@
         self.include_dir = include_dir
         self.lib_dir = lib_dir
         self.is_default_search_location = is_default_search_location
-        self.is_system_install = os.path.split(self.include_dir)[0] == self.root
+#        self.is_system_install = os.path.split(self.include_dir)[0] == self.root
+#       I think the purpose of system_install is just to avoid getting -I/usr, so
+#       the following line seems to work better.
+        self.is_system_install = os.path.split(self.include_dir)[0] == "/usr"
         
     def __cmp__(self, other):
         if (self.major != other.major):
@@ -168,7 +171,7 @@
         
         raise BoostError('Could not find boost version %s required by ROS_BOOST_VERSION environment variable'%(boost_version))
     
-    vers.sort()
+#    vers.sort() why? this breaks search order preference
     return vers
   
 def find_boost(search_paths):
@@ -184,7 +187,9 @@
                  (None if 'CPATH' not in os.environ else os.environ['CPATH'], True),
                  (None if 'C_INCLUDE_PATH' not in os.environ else os.environ['C_INCLUDE_PATH'], True),
                  (None if 'CPLUS_INCLUDE_PATH' not in os.environ else os.environ['CPLUS_INCLUDE_PATH'], True),
-                 (None if 'ROS_BOOST_ROOT' not in os.environ else os.environ['ROS_BOOST_ROOT'], False)]
+                 (None if 'ROS_BOOST_ROOT' not in os.environ else os.environ['ROS_BOOST_ROOT'], False),
+                 ('@ROS_BOOST_ROOT@', False)]
+
 
     search_paths = []
     for (str, system) in _search_paths:
