From a5dd1e64ea28b69b08652602e6e361188c7f4de3 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sat, 26 Sep 2020 11:42:30 +0200
Subject: [PATCH 1/3] fix compilation on legacy compilers
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

on 16.04, the default compiler shows:

In file included from …/bindings/python/crocoddyl/core/integrator/rk4.cpp:11:0:
…/include/crocoddyl/core/integrator/rk4.hpp:122:73: error: '>>' should be '> >' within a nested template argument list
std::vector>> differential;
^
…/include/crocoddyl/core/integrator/rk4.hpp: In constructor 'crocoddyl::IntegratedActionDataRK4Tpl::IntegratedActionDataRK4Tpl(Model<_Scalar>*)':
…/include/crocoddyl/core/integrator/rk4.hpp:89:69: error: '>>' should be '> >' within a nested template argument list
boost::shared_ptr>(model->get_differential()->createData()));
^
---
 include/crocoddyl/core/integrator/rk4.hpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/include/crocoddyl/core/integrator/rk4.hpp b/include/crocoddyl/core/integrator/rk4.hpp
index bdb8b369..8db97f4d 100644
--- include/crocoddyl/core/integrator/rk4.hpp
+++ include/crocoddyl/core/integrator/rk4.hpp
@@ -86,7 +86,7 @@ struct IntegratedActionDataRK4Tpl : public ActionDataAbstractTpl<_Scalar> {
 
     for (std::size_t i = 0; i < 4; ++i) {
       differential.push_back(
-          boost::shared_ptr<DifferentialActionDataAbstractTpl<Scalar>>(model->get_differential()->createData()));
+          boost::shared_ptr<DifferentialActionDataAbstractTpl<Scalar> >(model->get_differential()->createData()));
     }
 
     dx = VectorXs::Zero(ndx);
@@ -119,7 +119,7 @@ struct IntegratedActionDataRK4Tpl : public ActionDataAbstractTpl<_Scalar> {
   virtual ~IntegratedActionDataRK4Tpl() {}
 
   VectorXs dx;
-  std::vector<boost::shared_ptr<DifferentialActionDataAbstractTpl<Scalar>>> differential;
+  std::vector<boost::shared_ptr<DifferentialActionDataAbstractTpl<Scalar> > > differential;
   std::vector<Scalar> integral;
   std::vector<VectorXs> ki;
   std::vector<VectorXs> y;

From e237568da2d43c9f836f3d4fe5f8d102a8655997 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sat, 26 Sep 2020 11:44:29 +0200
Subject: [PATCH 2/3] [Python] Missing newline at end of file

---
 unittest/bindings/test_cop_cost.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/unittest/bindings/test_cop_cost.py b/unittest/bindings/test_cop_cost.py
index 715d13ea..a3b6b903 100644
--- unittest/bindings/test_cop_cost.py
+++ unittest/bindings/test_cop_cost.py
@@ -89,4 +89,4 @@
 assertNumDiff(DATA.Lx, dnum.Lx, NUMDIFF_MODIFIER *
               MODEL_ND.disturbance)  # threshold was 2.7e-2, is now 2.11e-4 (see assertNumDiff.__doc__)
 assertNumDiff(DATA.Lu, dnum.Lu, NUMDIFF_MODIFIER *
-              MODEL_ND.disturbance)  # threshold was 2.7e-2, is now 2.11e-4 (see assertNumDiff.__doc__)
\ No newline at end of file
+              MODEL_ND.disturbance)  # threshold was 2.7e-2, is now 2.11e-4 (see assertNumDiff.__doc__)

From 057f747ad1dd5db4b5231d3872b156d50d5388ff Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sat, 26 Sep 2020 12:48:07 +0200
Subject: [PATCH 3/3] fix build on C++ < 11
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fix:
…/include/crocoddyl/core/utils/file-io.hpp:29:22: error: no matching function for call to 'std::basic_ofstream<char>::open(const string&)'
fs_.open(filename);
^
---
 include/crocoddyl/core/utils/file-io.hpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/include/crocoddyl/core/utils/file-io.hpp b/include/crocoddyl/core/utils/file-io.hpp
index 53af7e5d..911514e4 100644
--- include/crocoddyl/core/utils/file-io.hpp
+++ include/crocoddyl/core/utils/file-io.hpp
@@ -26,7 +26,7 @@ class CsvStream {
   CsvStream(const std::string filename, const std::string separator = ",")
       : fs_(), is_first_(true), separator_(separator), escape_seq_("\""), special_chars_("\"") {
     fs_.exceptions(std::ios::failbit | std::ios::badbit);
-    fs_.open(filename);
+    fs_.open(filename.c_str());
   }
 
   ~CsvStream() {
