--- example/swig/yarp.i.base	2010-09-01 15:53:56.000000000 +0200
+++ example/swig/yarp.i	2010-11-22 19:13:49.380914000 +0100
@@ -318,6 +318,13 @@
 typedef yarp::os::BufferedPort<ImageRgba> BufferedPortImageRgba;
 %}
 
+%{
+typedef yarp::sig::ImageOf<yarp::sig::PixelMono> ImageMono;
+typedef yarp::os::TypedReader<ImageMono> TypedReaderImageMono;
+typedef yarp::os::TypedReaderCallback<ImageMono> TypedReaderCallbackImageMono;
+typedef yarp::os::BufferedPort<ImageMono> BufferedPortImageMono;
+%}
+
 %feature("notabstract") ImageRgb;
 %feature("notabstract") yarp::os::BufferedPort<ImageRgb>;
 %feature("notabstract") BufferedPortImageRgb;
@@ -326,6 +333,10 @@
 %feature("notabstract") yarp::os::BufferedPort<ImageRgba>;
 %feature("notabstract") BufferedPortImageRgba;
 
+%feature("notabstract") ImageMono;
+%feature("notabstract") yarp::os::BufferedPort<ImageMono>;
+%feature("notabstract") BufferedPortImageMono;
+
 %template(ImageRgb) yarp::sig::ImageOf<yarp::sig::PixelRgb>;
 %template(TypedReaderImageRgb) yarp::os::TypedReader<yarp::sig::ImageOf<yarp::sig::PixelRgb> >;
 %template(TypedReaderCallbackImageRgb) yarp::os::TypedReaderCallback<yarp::sig::ImageOf<yarp::sig::PixelRgb> >;
@@ -337,6 +348,10 @@
 %template(TypedReaderCallbackImageRgba) yarp::os::TypedReaderCallback<yarp::sig::ImageOf<yarp::sig::PixelRgba> >;
 %template(BufferedPortImageRgba) yarp::os::BufferedPort<yarp::sig::ImageOf<yarp::sig::PixelRgba> >;
 
+%template(ImageMono) yarp::sig::ImageOf<yarp::sig::PixelMono>;
+%template(TypedReaderImageMono) yarp::os::TypedReader<yarp::sig::ImageOf<yarp::sig::PixelMono> >;
+%template(TypedReaderCallbackImageMono) yarp::os::TypedReaderCallback<yarp::sig::ImageOf<yarp::sig::PixelMono> >;
+%template(BufferedPortImageMono) yarp::os::BufferedPort<yarp::sig::ImageOf<yarp::sig::PixelMono> >;
 
 // Now we do ImageFloat - it is a little trickey too..
 //%template(ImageFloat) yarp::sig::ImageOf<yarp::sig::PixelFloat>;
@@ -650,3 +665,22 @@
         self->setExternal((void*)mem, w, h);
         }
 }
+
+// Conversion of Python buffer type object into a pointer
+%extend yarp::sig::Image {
+    void setExternal(PyObject* mem, int w, int h) {
+        Py_buffer img_buffer;
+        int reply;
+        reply = PyObject_GetBuffer(mem, &img_buffer, PyBUF_SIMPLE);
+        // exit if the buffer could not be read
+        if (reply != 0)
+        {
+            fprintf(stderr, "Couldn not read Python buffers: %d\n", reply);
+            return;
+        }
+        self->setExternal((void*)img_buffer.buf, w, h);
+        // release the Python buffers
+        PyBuffer_Release(&img_buffer);
+
+    }
+}
