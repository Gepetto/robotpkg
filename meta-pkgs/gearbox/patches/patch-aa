--- cmake/DependencyUtils.cmake~	2010-02-01 04:55:11.000000000 +0100
+++ cmake/DependencyUtils.cmake	2011-06-16 14:23:05.852337640 +0200
@@ -3,6 +3,9 @@
 # If module_type is not equal "EXE" or "LIB", prints error message and quits.
 #
 # Have not tested this macro when the variables is_* are not same in the calling context.
+
+find_package(PkgConfig)
+
 macro( GBX_UTIL_CHECK_MODULE_TYPE type is_exe is_lib )
 #     message( STATUS "GBX_UTIL_CHECK_MODULE_TYPE type=${type}" )
 
@@ -156,7 +159,9 @@
             set( reason "${target_name} is not being built" )
         endif( ${ARGC} GREATER 5 )
         
-        if( NOT TARGET ${target_name} )
+        pkg_check_modules(${target_name} ${target_name})
+
+        if( NOT ${${target_name}_FOUND} )
             set( ${cumulative_var} FALSE )
             GBX_UTIL_MAKE_OPTION_NAME( option_name ${module_type} ${module_name} )
             if( is_exe )
@@ -164,7 +169,10 @@
             else( is_exe )
                 GBX_NOT_ADD_LIBRARY( ${module_name} ${reason} )
             endif( is_exe )
-        endif( NOT TARGET ${target_name} )
+        else( NOT ${${target_name}_FOUND} )
+          link_directories(${${target_name}_LIBRARY_DIRS})
+          include_directories(${${target_name}_INCLUDE_DIRS})
+        endif( NOT ${${target_name}_FOUND} )
 
     endif( ${cumulative_var} )
 
