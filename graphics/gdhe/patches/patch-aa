Fix compilation with jpeg>=8

--- modules/tkjpeg/jmem.c.orig	2010-12-21 14:26:44.681727555 +0100
+++ modules/tkjpeg/jmem.c	2010-12-21 14:26:46.208727620 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 1996-2001 LAAS/CNRS 
+ * Copyright (C) 1996-2001,2010 LAAS/CNRS 
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -95,7 +95,7 @@
  * Prepare for output to a  memory buffer
  */
 GLOBAL(void)
-jpeg_mem_dest(j_compress_ptr cinfo, unsigned char *buffer, int size)
+gdhe_jpeg_mem_dest(j_compress_ptr cinfo, unsigned char *buffer, int size)
 {
     my_dest_ptr dest;
 
@@ -114,7 +114,7 @@
 }
 
 GLOBAL(int)
-jpeg_mem_size(j_compress_ptr cinfo)
+gdhe_jpeg_mem_size(j_compress_ptr cinfo)
 {
     my_dest_ptr dest = (my_dest_ptr)cinfo->dest;
     
@@ -180,7 +180,7 @@
  * Prepare for inpuf from a  memory buffer
  */
 GLOBAL(void)
-jpeg_mem_src(j_decompress_ptr cinfo, unsigned char *buffer, int length)
+gdhe_jpeg_mem_src(j_decompress_ptr cinfo, unsigned char *buffer, int length)
 {
     my_src_ptr src;
 
--- modules/tkjpeg/jmem.h.orig	2010-12-21 14:28:09.335727427 +0100
+++ modules/tkjpeg/jmem.h	2010-12-21 14:28:13.542727661 +0100
@@ -33,8 +33,8 @@
 #define _JMEM_H
 
 /* jmem.c */
-void jpeg_mem_dest(j_compress_ptr cinfo, unsigned char *buffer, int size);
-void jpeg_mem_src(j_decompress_ptr cinfo, unsigned char *buffer, int size);
-int jpeg_mem_size(j_compress_ptr cinfo);
+void gdhe_jpeg_mem_dest(j_compress_ptr cinfo, unsigned char *buffer, int size);
+void gdhe_jpeg_mem_src(j_decompress_ptr cinfo, unsigned char *buffer, int size);
+int gdhe_jpeg_mem_size(j_compress_ptr cinfo);
 
 #endif /* _JMEM_H */
--- modules/tkjpeg/tkjpeg.c.orig	2010-12-21 14:30:19.224727391 +0100
+++ modules/tkjpeg/tkjpeg.c	2010-12-21 14:30:40.687727596 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 1996-2008 LAAS/CNRS 
+ * Copyright (C) 1996-2008,2010 LAAS/CNRS 
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -141,7 +141,7 @@
     /* Allocation d'une structure de decompression */
     jpeg_create_decompress(&cinfo);
     /* Lien avec le canal TCL */
-    jpeg_mem_src(&cinfo, p, length);
+    gdhe_jpeg_mem_src(&cinfo, p, length);
     /* Sauvegarde du handler d'erreur fatale */
     error_exit_handler = jerr.pub.error_exit;
     /* installation d'un handler local qui fait un lonjmp */
