Obfuscated temporary directory computation is not necessary

--- dom/src/dae/daeUtils.cpp~	2011-02-27 04:42:47.000000000 +0100
+++ dom/src/dae/daeUtils.cpp	2011-10-16 14:59:53.000000000 +0200
@@ -152,14 +152,8 @@
 const string& cdom::getSystemTmpDir() {
 #ifdef WIN32
     static string tmpDir = string(getenv("TMP")) + getFileSeparator();
-#elif defined(__linux__) || defined(__linux)
-    static string tmpDir = "/tmp/";
-#elif defined __APPLE_CC__
-static string tmpDir = string(getenv("TMPDIR"));
-#elif defined __CELLOS_LV2__
-#error tmp dir for your system unknown
 #else
-#error tmp dir for your system unknown
+    static string tmpDir = string(getenv("TMPDIR")?getenv("TMPDIR"):"/tmp/");
 #endif
     return tmpDir;
 }
@@ -165,14 +165,8 @@
     std::string tmp(tmpnam(&tmpbuffer[0]));
 #ifdef WIN32
     randomSegment = tmp.substr(tmp.find_last_of('\\')+1);
-#elif defined(__linux__) || defined(__linux)
-    randomSegment = tmp.substr(tmp.find_last_of('/')+1);
-#elif defined __APPLE_CC__
-	randomSegment = tmp.substr(tmp.find_last_of('/')+1);
-#elif defined __CELLOS_LV2__
-#error  usage of tmpnam() for your system unknown
 #else
-#error  usage of tmpnam() for your system unknown
+    randomSegment = tmp.substr(tmp.find_last_of('/')+1);
 #endif
     return randomSegment;
 }
