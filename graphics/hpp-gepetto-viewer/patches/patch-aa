python 3 compatibility
ref https://github.com/humanoid-path-planner/hpp-gepetto-viewer/pull/29
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -31,11 +31,11 @@ SET(PROJECT_URL "https://github.com/humanoid-path-planner/hpp-gepetto-viewer")
 # Tells pkg-config to read cmake_plugin from pkg config file.
 LIST(APPEND PKG_CONFIG_ADDITIONAL_VARIABLES cmake_plugin)
 
-findpython(2.7 EXACT)
+findpython()
 SETUP_HPP_PROJECT()
 
-add_required_dependency("hpp-corbaserver >= 4")
-add_optional_dependency("gepetto-viewer-corba")
+ADD_REQUIRED_DEPENDENCY("hpp-corbaserver >= 4")
+ADD_OPTIONAL_DEPENDENCY("gepetto-viewer-corba")
 IF(GEPETTO_VIEWER_CORBA_FOUND)
   INCLUDE(${GEPETTO_VIEWER_CORBA_CMAKE_PLUGIN})
 ENDIF()
--- src/hpp/gepetto/blender/__init__.py
+++ src/hpp/gepetto/blender/__init__.py
@@ -17,4 +17,4 @@
 # hpp-gepetto-viewer.  If not, see
 # <http://www.gnu.org/licenses/>.
 
-import exportmotion
+from . import exportmotion
diff --git a/src/hpp/gepetto/gui/path_graph.py b/src/hpp/gepetto/gui/path_graph.py
index f08b19f..df9b516 100644
--- src/hpp/gepetto/gui/path_graph.py
+++ src/hpp/gepetto/gui/path_graph.py
@@ -1,3 +1,4 @@
+from __future__ import print_function
 from PythonQt import QtGui, QtCore, Qt
 
 from hpp import Quaternion
@@ -124,21 +125,21 @@ class Velocities:
             self.disconnect()
 
     def toggleJoint (self, joint):
-        if self.getters.has_key(joint): self.remove(joint)
+        if joint in self.getters: self.remove(joint)
         else:
             g = VelGetter(self.plugin, joint)
             g.createNodes (Velocities.color)
             self.add (g)
 
     def toggleCom (self, com):
-        if self.getters.has_key(com): self.remove (com)
+        if com in self.getters: self.remove (com)
         else:
             g = ComGetter (self.plugin, com)
             g.createNodes (Velocities.color)
             self.add (g)
 
     def applyAll (self):
-        for n, getV in self.getters.items():
+        for n, getV in list(self.getters.items()):
             getV.apply()
 
 class JointAction(Qt.QAction):
@@ -318,7 +319,7 @@ class Plugin (QtGui.QDockWidget):
                 self.yselectcb.append ((cb, rank))
                 saLayout.addWidget (cb)
             else:
-                for i in xrange (size):
+                for i in range (size):
                     cb = QtGui.QCheckBox (formats[1] % (n, "q", i))
                     self.yselectcb.append ((cb, rank + i))
                     saLayout.addWidget (cb)
@@ -332,7 +333,7 @@ class Plugin (QtGui.QDockWidget):
                     self.yselectcb.append ((cb, rank))
                     saLayout.addWidget (cb)
                 else:
-                    for i in xrange (size):
+                    for i in range (size):
                         cb = QtGui.QCheckBox (formats[1] % (n,type,i))
                         self.yselectcb.append ((cb, rank + i))
                         saLayout.addWidget (cb)
@@ -352,7 +353,7 @@ class Plugin (QtGui.QDockWidget):
             if size == 1:
                 self.xselect.addItem (formats[0] % (n,"q"), rank)
             else:
-                for i in xrange (size):
+                for i in range (size):
                     self.xselect.addItem (formats[1] % (n,"q",i), rank + i)
             rank = rank + size
         for type in ("v", "a"):
@@ -361,7 +362,7 @@ class Plugin (QtGui.QDockWidget):
                 if size == 1:
                     self.xselect.addItem (formats[0] % (n,type), rank)
                 else:
-                    for i in xrange (size):
+                    for i in range (size):
                         self.xselect.addItem (formats[1] % (n,type,i), rank + i)
                 rank = rank + size
 
@@ -425,6 +426,6 @@ class Plugin (QtGui.QDockWidget):
         self.gui = GuiClient()
 
     def getJointActions(self, name):
-        if not self.jointActions.has_key(name):
+        if name not in self.jointActions:
             self.jointActions[name] = (JointAction ("Show/Hide joint &velocity", name, self.velocities, self),)
         return self.jointActions[name]
--- src/hpp/gepetto/manipulation/__init__.py
+++ src/hpp/gepetto/manipulation/__init__.py
@@ -17,5 +17,5 @@
 # hpp-gepetto-viewer.  If not, see
 # <http://www.gnu.org/licenses/>.
 
-from viewer import Viewer
-from viewer_factory import ViewerFactory
+from .viewer import Viewer
+from .viewer_factory import ViewerFactory
--- src/hpp/gepetto/path_player.py
+++ src/hpp/gepetto/path_player.py
@@ -27,7 +27,7 @@ import hpp.corbaserver.client
 #
 class PathPlayer (object):
     def __init__ (self, publisher, client = None, dt = 0.01, speed = 1) :
-	if client is None: client = hpp.corbaserver.Client()
+        if client is None: client = hpp.corbaserver.Client()
         self.client = client
         self.publisher = publisher
         self.dt = dt
@@ -160,8 +160,8 @@ class PathPlayer (object):
         for jn in jointNames:
             rk = self.publisher.robot.rankInConfiguration[jn]
             sz = self.publisher.robot.getJointConfigSize(jn)
-            filter.extend(range(rk,rk+sz))
-            if sz > 1: labels.extend(map(lambda x: jn + str(x), xrange(0,sz)))
+            filter.extend(list(range(rk,rk+sz)))
+            if sz > 1: labels.extend([jn + str(x) for x in range(0,sz)])
             else:      labels.append(jn)
 
         data = (np.array(qs)[:,filter]).transpose()
@@ -172,7 +172,7 @@ class PathPlayer (object):
         for d, l in zip (data, labels):
             ax.plot(ts, d, label = l)
         if cursor:
-            for i in xrange(len(ts)):
+            for i in range(len(ts)):
                 c = ax.axvline(x=ts[i], color='r', linestyle='--')
                 fn = filename.format(i)
                 fig.savefig(fn, dpi = 150)
--- src/hpp/gepetto/viewer.py
+++ src/hpp/gepetto/viewer.py
@@ -113,9 +113,9 @@ class Viewer (object):
         self.robotBodies = list ()
         # build list of pairs (robotName, objectName)
         for j in self.robot.getAllJointNames ():
-            self.robotBodies.extend (map (lambda n:
-                                              (j, self.displayName + "/", n),
-                                          self.robot.getLinkNames (j)))
+            self.robotBodies.extend ([
+                (j, self.displayName + "/", n) for n in self.robot.getLinkNames (j)
+                ])
 
     ## Add a landmark
     # \sa gepetto::corbaserver::GraphicalInterface::addLandmark
--- src/hpp/gepetto/manipulation/viewer_factory.py
+++ src/hpp/gepetto/manipulation/viewer_factory.py
@@ -18,7 +18,6 @@
 # <http://www.gnu.org/licenses/>.
 
 import os
-import rospkg
 import warnings
 from hpp.gepetto import ViewerFactory as Parent
 from hpp.gepetto.manipulation import Viewer
--- src/hpp/gepetto/viewer.py
+++ src/hpp/gepetto/viewer.py
@@ -21,8 +21,6 @@ import os.path
 import math
 from hpp.quaternion import Quaternion
 import omniORB.any
-from gepetto.corbaserver import Client as GuiClient
-from gepetto import Error as GepettoError
 
 def hppToViewerTransform(input):
     return input
@@ -52,6 +50,8 @@ class Viewer (object):
     #
     #  The robot loaded in hppcorbaserver is loaded into gepetto-viewer-server.
     def __init__ (self, problemSolver, viewerClient = None, collisionURDF = False, displayName = None, displayArrows = False, displayCoM = False):
+        from gepetto.corbaserver import Client as GuiClient
+
         self.problemSolver = problemSolver
         self.robot = problemSolver.robot
         self.collisionURDF = collisionURDF
@@ -98,6 +98,7 @@ class Viewer (object):
         self.client.gui.addToGroup (self.displayName, self.sceneName)
 
     def createWindowAndScene (self, viewerClient, name):
+        from gepetto import Error as GepettoError
         self.windowName = "scene_" + name
         try:
             self.windowId = viewerClient.gui.getWindowID (self.windowName)
--- src/hpp/gepetto/viewer_factory.py
+++ src/hpp/gepetto/viewer_factory.py
@@ -18,12 +18,9 @@
 # <http://www.gnu.org/licenses/>.
 
 import os.path
-import rospkg
 import warnings
 from hpp.gepetto import Viewer
 
-rospack = rospkg.RosPack()
-
 ## Viewer factory
 #
 #  Store commands to be sent to \c gepetto-viewer-server, create

