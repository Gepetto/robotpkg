From b302932ee665eb43eb688ffa1f805d29d11323b5 Mon Sep 17 00:00:00 2001
From: Simon Lacroix <simon.lacroix@laas.fr>
Date: Tue, 27 Aug 2013 23:03:31 +0200
Subject: [PATCH] Write in the geodetic reference in the file output functions
 (and read it in the load-file functions)

---
 src/io.c |   95 ++++++++++++++++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 80 insertions(+), 15 deletions(-)

diff --git a/src/io.c b/src/io.c
index 9b757d9..c3609a7 100644
--- src/io.c
+++ src/io.c
@@ -1,4 +1,3 @@
-/* Les includes génériques de C */
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -23,9 +22,20 @@ dtm_writeAsciiDtm (DTM*	mnt,
   /* write the general DTM info */
   fprintf (file, DTM_ASCII_FF);
   fprintf (file, "\n");
-  fprintf (file, "%d %d %d %d %d\n", 
-	   mnt->type, mnt->stockage, mnt->cells, mnt->bornes, mnt->luminance);
+  fprintf (file, "%d %d %d %d %d %d %d\n", 
+	   mnt->type, mnt->stockage, mnt->cells, mnt->bornes, mnt->luminance,
+	   mnt->geoReference, mnt->geoOrientation);
   fprintf (file, "%d\n", mnt->nb_im3d);
+  /* The geodesic reference */
+  fprintf (file, "%e %e %e\n", 
+	   mnt->geodesicOrigin.lat, mnt->geodesicOrigin.lon, 
+	   mnt->geodesicOrigin.alt);
+  fprintf (file, "%d %d\n", 
+	   mnt->geodesicOrigin.gridZoneDesignation, mnt->geodesicOrigin.gridZone);
+  fprintf (file, "%e %e %e\n", 
+	   mnt->geodesicOrigin.easting, mnt->geodesicOrigin.northing, 
+	   mnt->geodesicOrigin.nextEastMeridian);
+  /* General geometric properties of the DTM */
   fprintf (file, "%e %e\n", mnt->x_origine, mnt->y_origine);
   fprintf (file, "%d %d\n", mnt->i_origine, mnt->j_origine);
   fprintf (file, "%e %e\n", mnt->scale_x, mnt->scale_y);
@@ -74,7 +84,8 @@ dtm_readAsciiDtm (FILE*	file)
   int		may_be_visible;
   float		z_moyen, sigma_z, z_max;
 
-  int  type_info, stockage_info, cells_infos, bornes_info, luminance_info;
+  int  type_info, stockage_info, cells_infos, bornes_info, 
+    luminance_info, geoReference_info, geoOrientation_info;
 
   /* Creates the DTM */
   mnt = create_dtm ();
@@ -90,9 +101,10 @@ dtm_readAsciiDtm (FILE*	file)
     return (NULL);
   }
 
-  if (fscanf (file, "%d %d %d %d %d\n", 
+  if (fscanf (file, "%d %d %d %d %d %d %d\n", 
 	      &type_info, &stockage_info, &cells_infos, 
-	      &bornes_info, &luminance_info) != 5) {
+	      &bornes_info, &luminance_info, 
+	      &geoReference_info, &geoOrientation_info) != 7) {
     dtmError (ERR_DTM_FILEFORMAT);
     return (NULL);
   }
@@ -100,12 +112,32 @@ dtm_readAsciiDtm (FILE*	file)
   mnt->stockage = stockage_info;
   mnt->cells = cells_infos;
   mnt->bornes = bornes_info;
-  mnt->luminance = luminance_info; /* (we use these intermediate variables to
-				      avoid a gcc warning */  
+  mnt->luminance = luminance_info; 
+  mnt->geoReference = geoReference_info;
+  mnt->geoOrientation = geoOrientation_info;  /* (we use these intermediate
+     variables to avoid a gcc warning */  
   if (fscanf (file, "%d\n", &(mnt->nb_im3d)) != 1) {
     dtmError (ERR_DTM_FILEFORMAT);
     return (NULL);
   }
+  if (fscanf (file, "%le %le %le\n", 
+	      &(mnt->geodesicOrigin.lat), &(mnt->geodesicOrigin.lon), 
+	      &(mnt->geodesicOrigin.alt)) != 3) {
+    dtmError (ERR_DTM_FILEFORMAT);
+    return (NULL);
+  }
+  if (fscanf (file, "%d %d\n", 
+	      &(mnt->geodesicOrigin.gridZoneDesignation), 
+	      &(mnt->geodesicOrigin.gridZone)) != 2) {
+    dtmError (ERR_DTM_FILEFORMAT);
+    return (NULL);
+  }
+  if (fscanf (file, "%le %le %le\n", 
+	      &(mnt->geodesicOrigin.easting), &(mnt->geodesicOrigin.northing), 
+	      &(mnt->geodesicOrigin.nextEastMeridian)) != 3) {
+    dtmError (ERR_DTM_FILEFORMAT);
+    return (NULL);
+  }
   if (fscanf (file, "%le %le\n", &(mnt->x_origine), &(mnt->y_origine)) != 2) {
     dtmError (ERR_DTM_FILEFORMAT);
     return (NULL);
@@ -215,9 +247,20 @@ dtm_writeBinaryDtm (DTM*	mnt,
   /* write the general DTM info (in ASCII) */
   fprintf (file, DTM_BINARY_FF);
   fprintf (file, "\n");
-  fprintf (file, "%d %d %d %d %d\n", 
-	   mnt->type, mnt->stockage, mnt->cells, mnt->bornes, mnt->luminance);
+  fprintf (file, "%d %d %d %d %d %d %d\n", 
+	   mnt->type, mnt->stockage, mnt->cells, mnt->bornes, mnt->luminance,
+	   mnt->geoReference, mnt->geoOrientation);
   fprintf (file, "%d\n", mnt->nb_im3d);
+  /* The geodesic reference */
+  fprintf (file, "%e %e %e\n", 
+	   mnt->geodesicOrigin.lat, mnt->geodesicOrigin.lon, 
+	   mnt->geodesicOrigin.alt);
+  fprintf (file, "%d %d\n", 
+	   mnt->geodesicOrigin.gridZoneDesignation, mnt->geodesicOrigin.gridZone);
+  fprintf (file, "%e %e %e\n", 
+	   mnt->geodesicOrigin.easting, mnt->geodesicOrigin.northing, 
+	   mnt->geodesicOrigin.nextEastMeridian);
+  /* General geometric properties of the DTM */
   fprintf (file, "%e %e\n", mnt->x_origine, mnt->y_origine);
   fprintf (file, "%d %d\n", mnt->i_origine, mnt->j_origine);
   fprintf (file, "%e %e\n", mnt->scale_x, mnt->scale_y);
@@ -249,7 +292,8 @@ dtm_readBinaryDtm (FILE * file)
   DTM*		mnt;
   unsigned int		nbCells;
 
-  int  type_info, stockage_info, cells_infos, bornes_info, luminance_info;
+  int  type_info, stockage_info, cells_infos, bornes_info, 
+    luminance_info, geoReference_info, geoOrientation_info;
 
   /* Creates the DTM */
   mnt = create_dtm ();
@@ -265,9 +309,10 @@ dtm_readBinaryDtm (FILE * file)
     return (NULL);
   }
 
-  if (fscanf (file, "%d %d %d %d %d\n", 
+  if (fscanf (file, "%d %d %d %d %d %d %d\n", 
 	      &type_info, &stockage_info, &cells_infos, 
-	      &bornes_info, &luminance_info) != 5) {
+	      &bornes_info, &luminance_info, 
+	      &geoReference_info, &geoOrientation_info) != 7) {
     dtmError (ERR_DTM_FILEFORMAT);
     return (NULL);
   }
@@ -275,13 +320,33 @@ dtm_readBinaryDtm (FILE * file)
   mnt->stockage = stockage_info;
   mnt->cells = cells_infos;
   mnt->bornes = bornes_info;
-  mnt->luminance = luminance_info; /* (we use these intermediate variables to
-				      avoid a gcc warning */  
+  mnt->luminance = luminance_info; 
+  mnt->geoReference = geoReference_info;
+  mnt->geoOrientation = geoOrientation_info;  /* (we use these intermediate
+     variables to avoid a gcc warning */  
 
   if (fscanf (file, "%d\n", &(mnt->nb_im3d)) != 1) {
     dtmError (ERR_DTM_FILEFORMAT);
     return (NULL);
   }
+  if (fscanf (file, "%le %le %le\n", 
+	      &(mnt->geodesicOrigin.lat), &(mnt->geodesicOrigin.lon), 
+	      &(mnt->geodesicOrigin.alt)) != 3) {
+    dtmError (ERR_DTM_FILEFORMAT);
+    return (NULL);
+  }
+  if (fscanf (file, "%d %d\n", 
+	      &(mnt->geodesicOrigin.gridZoneDesignation), 
+	      &(mnt->geodesicOrigin.gridZone)) != 2) {
+    dtmError (ERR_DTM_FILEFORMAT);
+    return (NULL);
+  }
+  if (fscanf (file, "%le %le %le\n", 
+	      &(mnt->geodesicOrigin.easting), &(mnt->geodesicOrigin.northing), 
+	      &(mnt->geodesicOrigin.nextEastMeridian)) != 3) {
+    dtmError (ERR_DTM_FILEFORMAT);
+    return (NULL);
+  }
   if (fscanf (file, "%le %le\n", &(mnt->x_origine), &(mnt->y_origine)) != 2) {
     dtmError (ERR_DTM_FILEFORMAT);
     return (NULL);
-- 
1.7.9.5

