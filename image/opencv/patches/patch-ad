Fix compilation when !HAVE_V4L and HAVE_V4L2

--- modules/highgui/src/cap_v4l.cpp~	2011-09-24 18:22:26.287162612 +0200
+++ modules/highgui/src/cap_v4l.cpp	2011-09-24 19:04:28.759487995 +0200
@@ -216,7 +216,7 @@
 
 #ifdef HAVE_CAMV4L
 #include <linux/videodev.h>
-#else
+#elif HAVE_LIBV4L
 #include <libv4l1-videodev.h>
 #endif
 
@@ -292,11 +292,13 @@
     int deviceHandle;
     int bufferIndex;
     int FirstCapture;
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
     struct video_capability capability;
     struct video_window     captureWindow;
     struct video_picture    imageProperties;
     struct video_mbuf       memoryBuffer;
     struct video_mmap       *mmaps;
+#endif
     char *memoryMap;
     IplImage frame;
 
@@ -397,6 +399,7 @@
 
 }; /* End icvInitCapture_V4L */
 
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
 static int
 try_palette(int fd,
             struct video_picture *cam_pic,
@@ -413,6 +416,7 @@
     return 1;
   return 0;
 }
+#endif
 
 #ifdef HAVE_CAMV4L2
 
@@ -438,6 +442,7 @@
 
 #endif /* HAVE_CAMV4L2 */
 
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
 static int try_init_v4l(CvCaptureCAM_V4L* capture, char *deviceName)
 {
 
@@ -479,6 +484,7 @@
   return detect;
 
 }
+#endif
 
 #ifdef HAVE_CAMV4L2
 
@@ -516,6 +522,7 @@
     }
       else
     {
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
       CLEAR (capture->capability);
       capture->capability.type = capture->cap.capabilities;
 
@@ -524,6 +531,7 @@
       {
         detect = 1;
       }
+#endif
     }
   }
 
@@ -597,6 +605,7 @@
 
 #endif /* HAVE_CAMV4L2 */
 
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
 static int autosetup_capture_mode_v4l(CvCaptureCAM_V4L* capture)
 {
 
@@ -629,6 +638,7 @@
   return 0;
 
 }
+#endif
 
 #ifdef HAVE_CAMV4L2
 
@@ -980,8 +990,8 @@
 
    /* Set up Image data */
    cvInitImageHeader( &capture->frame,
-                      cvSize( capture->captureWindow.width,
-                              capture->captureWindow.height ),
+                      cvSize( capture->form.fmt.pix.width,
+                              capture->form.fmt.pix.height ),
                       IPL_DEPTH_8U, 3, IPL_ORIGIN_TL, 4 );
    /* Allocate space for RGBA data */
    capture->frame.imageData = (char *)cvAlloc(capture->frame.imageSize);
@@ -991,6 +1001,7 @@
 
 #endif /* HAVE_CAMV4L2 */
 
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
 static int _capture_V4L (CvCaptureCAM_V4L *capture, char *deviceName)
 {
    int detect_v4l = 0;
@@ -1108,6 +1119,7 @@
 
    return 1;
 }; /* End _capture_V4L */
+#endif
 
 static CvCaptureCAM_V4L * icvCaptureFromCAM_V4L (int index)
 {
@@ -1158,10 +1170,12 @@
        icvCloseCAM_V4L(capture);
        V4L2_SUPPORT = 0;
 #endif  /* HAVE_CAMV4L2 */
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
        if (_capture_V4L (capture, deviceName) == -1) {
            icvCloseCAM_V4L(capture);
            return NULL;
        }
+#endif
 #ifdef HAVE_CAMV4L2
    } else {
        V4L2_SUPPORT = 1;
@@ -1303,7 +1317,7 @@
       } else
 #endif /* HAVE_CAMV4L2 */
       {
-
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
         for (capture->bufferIndex = 0;
          capture->bufferIndex < (capture->memoryBuffer.frames-1);
          ++capture->bufferIndex) {
@@ -1318,7 +1332,7 @@
             return 0;
           }
         }
-
+#endif
       }
 
 #if defined(V4L_ABORT_BADJPEG) && defined(HAVE_CAMV4L2)
@@ -1344,7 +1358,7 @@
    } else
 #endif /* HAVE_CAMV4L2 */
    {
-
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
      capture->mmaps[capture->bufferIndex].frame  = capture->bufferIndex;
      capture->mmaps[capture->bufferIndex].width  = capture->captureWindow.width;
      capture->mmaps[capture->bufferIndex].height = capture->captureWindow.height;
@@ -1360,7 +1374,7 @@
      if (capture->bufferIndex == capture->memoryBuffer.frames) {
         capture->bufferIndex = 0;
      }
-
+#endif
    }
 
    return(1);
@@ -2080,12 +2094,12 @@
   if (V4L2_SUPPORT == 0)
 #endif /* HAVE_CAMV4L2 */
   {
-
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
     /* [FD] this really belongs here */
     if (ioctl(capture->deviceHandle, VIDIOCSYNC, &capture->mmaps[capture->bufferIndex].frame) == -1) {
       fprintf( stderr, "HIGHGUI ERROR: V4L: Could not SYNC to video stream. %s\n", strerror(errno));
     }
-
+#endif
   }
 
    /* Now get what has already been captured as a IplImage return */
@@ -2110,7 +2124,7 @@
   } else
 #endif /* HAVE_CAMV4L2 */
   {
-
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
     if((capture->frame.width != capture->mmaps[capture->bufferIndex].width)
       || (capture->frame.height != capture->mmaps[capture->bufferIndex].height)) {
        cvFree(&capture->frame.imageData);
@@ -2120,7 +2134,7 @@
               IPL_DEPTH_8U, 3, IPL_ORIGIN_TL, 4 );
        capture->frame.imageData = (char *)cvAlloc(capture->frame.imageSize);
     }
-
+#endif
   }
 
 #ifdef HAVE_CAMV4L2
@@ -2208,7 +2222,7 @@
   } else
 #endif /* HAVE_CAMV4L2 */
   {
-    
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
     switch(capture->imageProperties.palette) {
       case VIDEO_PALETTE_RGB24:
         memcpy((char *)capture->frame.imageData,
@@ -2240,7 +2254,7 @@
 
         return 0;
     }
-
+#endif
   }
 
    return(&capture->frame);
@@ -2365,7 +2379,7 @@
   } else
 #endif /* HAVE_CAMV4L2 */
   {
-
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
     int retval = -1;
 
     if (ioctl (capture->deviceHandle,
@@ -2419,7 +2433,7 @@
 
     /* all was OK, so convert to 0.0 - 1.0 range, and return the value */
     return float (retval) / 0xFFFF;
-
+#endif
   }
 
 };
@@ -2489,7 +2503,7 @@
   } else
 #endif /* HAVE_CAMV4L2 */
   {
-
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
     if (capture==0) return 0;
      if (w>capture->capability.maxwidth) {
        w=capture->capability.maxwidth;
@@ -2512,7 +2526,7 @@
      }
 
      capture->FirstCapture = 1;
-
+#endif
   }
 
   return 0;
@@ -2648,7 +2662,7 @@
   } else
 #endif /* HAVE_CAMV4L2 */
   {
-
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
     int v4l_value;
 
     /* scale the value to the wanted integer one */
@@ -2690,6 +2704,7 @@
        icvCloseCAM_V4L(capture);
        return -1;
     }
+#endif
   }
 
   /* all was OK */
@@ -2752,12 +2767,12 @@
      if (V4L2_SUPPORT == 0)
 #endif /* HAVE_CAMV4L2 */
      {
-
+#if defined(HAVE_CAMV4L) || defined(HAVE_LIBV4L)
        if (capture->mmaps)
          free(capture->mmaps);
        if (capture->memoryMap)
          munmap(capture->memoryMap, capture->memoryBuffer.size);
-
+#endif
      }
 #ifdef HAVE_CAMV4L2
      else {
