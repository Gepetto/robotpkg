libavcodec-56 does not support old codec id anymore

--- modules/highgui/src/ffmpeg_codecs.hpp~	2013-12-27 18:09:18.000000000 +0100
+++ modules/highgui/src/ffmpeg_codecs.hpp	2014-11-06 11:46:06.597183831 +0100
@@ -100,160 +100,169 @@
     unsigned int tag;
 } AVCodecTag;
 
+// transition from libavcodec-54 to 56
+#ifdef CODEC_ID_H264
+# define OPENCV_AVCODEC_ID(x) x
+#else
+# define OPENCV_AVCODEC_ID(x) AV_ ## x
+#endif
+
 const AVCodecTag codec_bmp_tags[] = {
-    { CODEC_ID_H264, MKTAG('H', '2', '6', '4') },
-    { CODEC_ID_H264, MKTAG('h', '2', '6', '4') },
-    { CODEC_ID_H264, MKTAG('X', '2', '6', '4') },
-    { CODEC_ID_H264, MKTAG('x', '2', '6', '4') },
-    { CODEC_ID_H264, MKTAG('a', 'v', 'c', '1') },
-    { CODEC_ID_H264, MKTAG('V', 'S', 'S', 'H') },
-
-    { CODEC_ID_H263, MKTAG('H', '2', '6', '3') },
-    { CODEC_ID_H263P, MKTAG('H', '2', '6', '3') },
-    { CODEC_ID_H263I, MKTAG('I', '2', '6', '3') }, /* intel h263 */
-    { CODEC_ID_H261, MKTAG('H', '2', '6', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H264), MKTAG('H', '2', '6', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H264), MKTAG('h', '2', '6', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H264), MKTAG('X', '2', '6', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H264), MKTAG('x', '2', '6', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H264), MKTAG('a', 'v', 'c', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H264), MKTAG('V', 'S', 'S', 'H') },
+
+    { OPENCV_AVCODEC_ID(CODEC_ID_H263), MKTAG('H', '2', '6', '3') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H263P), MKTAG('H', '2', '6', '3') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H263I), MKTAG('I', '2', '6', '3') }, /* intel h263 */
+    { OPENCV_AVCODEC_ID(CODEC_ID_H261), MKTAG('H', '2', '6', '1') },
 
     /* added based on MPlayer */
-    { CODEC_ID_H263P, MKTAG('U', '2', '6', '3') },
-    { CODEC_ID_H263P, MKTAG('v', 'i', 'v', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H263P), MKTAG('U', '2', '6', '3') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_H263P), MKTAG('v', 'i', 'v', '1') },
 
-    { CODEC_ID_MPEG4, MKTAG('F', 'M', 'P', '4') },
-    { CODEC_ID_MPEG4, MKTAG('D', 'I', 'V', 'X') },
-    { CODEC_ID_MPEG4, MKTAG('D', 'X', '5', '0') },
-    { CODEC_ID_MPEG4, MKTAG('X', 'V', 'I', 'D') },
-    { CODEC_ID_MPEG4, MKTAG('M', 'P', '4', 'S') },
-    { CODEC_ID_MPEG4, MKTAG('M', '4', 'S', '2') },
-    { CODEC_ID_MPEG4, MKTAG(0x04, 0, 0, 0) }, /* some broken avi use this */
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('F', 'M', 'P', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('D', 'I', 'V', 'X') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('D', 'X', '5', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('X', 'V', 'I', 'D') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('M', 'P', '4', 'S') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('M', '4', 'S', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG(0x04, 0, 0, 0) }, /* some broken avi use this */
 
     /* added based on MPlayer */
-    { CODEC_ID_MPEG4, MKTAG('D', 'I', 'V', '1') },
-    { CODEC_ID_MPEG4, MKTAG('B', 'L', 'Z', '0') },
-    { CODEC_ID_MPEG4, MKTAG('m', 'p', '4', 'v') },
-    { CODEC_ID_MPEG4, MKTAG('U', 'M', 'P', '4') },
-    { CODEC_ID_MPEG4, MKTAG('W', 'V', '1', 'F') },
-    { CODEC_ID_MPEG4, MKTAG('S', 'E', 'D', 'G') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('D', 'I', 'V', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('B', 'L', 'Z', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('m', 'p', '4', 'v') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('U', 'M', 'P', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('W', 'V', '1', 'F') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('S', 'E', 'D', 'G') },
 
-    { CODEC_ID_MPEG4, MKTAG('R', 'M', 'P', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG4), MKTAG('R', 'M', 'P', '4') },
 
-    { CODEC_ID_MSMPEG4V3, MKTAG('D', 'I', 'V', '3') }, /* default signature when using MSMPEG4 */
-    { CODEC_ID_MSMPEG4V3, MKTAG('M', 'P', '4', '3') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('D', 'I', 'V', '3') }, /* default signature when using MSMPEG4 */
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('M', 'P', '4', '3') },
 
     /* added based on MPlayer */
-    { CODEC_ID_MSMPEG4V3, MKTAG('M', 'P', 'G', '3') },
-    { CODEC_ID_MSMPEG4V3, MKTAG('D', 'I', 'V', '5') },
-    { CODEC_ID_MSMPEG4V3, MKTAG('D', 'I', 'V', '6') },
-    { CODEC_ID_MSMPEG4V3, MKTAG('D', 'I', 'V', '4') },
-    { CODEC_ID_MSMPEG4V3, MKTAG('A', 'P', '4', '1') },
-    { CODEC_ID_MSMPEG4V3, MKTAG('C', 'O', 'L', '1') },
-    { CODEC_ID_MSMPEG4V3, MKTAG('C', 'O', 'L', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('M', 'P', 'G', '3') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('D', 'I', 'V', '5') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('D', 'I', 'V', '6') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('D', 'I', 'V', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('A', 'P', '4', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('C', 'O', 'L', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V3), MKTAG('C', 'O', 'L', '0') },
 
-    { CODEC_ID_MSMPEG4V2, MKTAG('M', 'P', '4', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V2), MKTAG('M', 'P', '4', '2') },
 
     /* added based on MPlayer */
-    { CODEC_ID_MSMPEG4V2, MKTAG('D', 'I', 'V', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V2), MKTAG('D', 'I', 'V', '2') },
 
-    { CODEC_ID_MSMPEG4V1, MKTAG('M', 'P', 'G', '4') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSMPEG4V1), MKTAG('M', 'P', 'G', '4') },
 
-    { CODEC_ID_WMV1, MKTAG('W', 'M', 'V', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_WMV1), MKTAG('W', 'M', 'V', '1') },
 
     /* added based on MPlayer */
-    { CODEC_ID_WMV2, MKTAG('W', 'M', 'V', '2') },
-    { CODEC_ID_DVVIDEO, MKTAG('d', 'v', 's', 'd') },
-    { CODEC_ID_DVVIDEO, MKTAG('d', 'v', 'h', 'd') },
-    { CODEC_ID_DVVIDEO, MKTAG('d', 'v', 's', 'l') },
-    { CODEC_ID_DVVIDEO, MKTAG('d', 'v', '2', '5') },
-    { CODEC_ID_MPEG1VIDEO, MKTAG('m', 'p', 'g', '1') },
-    { CODEC_ID_MPEG1VIDEO, MKTAG('m', 'p', 'g', '2') },
-    { CODEC_ID_MPEG2VIDEO, MKTAG('m', 'p', 'g', '2') },
-    { CODEC_ID_MPEG2VIDEO, MKTAG('M', 'P', 'E', 'G') },
-    { CODEC_ID_MPEG1VIDEO, MKTAG('P', 'I', 'M', '1') },
-    { CODEC_ID_MPEG1VIDEO, MKTAG('V', 'C', 'R', '2') },
-    { CODEC_ID_MPEG1VIDEO, 0x10000001 },
-    { CODEC_ID_MPEG2VIDEO, 0x10000002 },
-    { CODEC_ID_MPEG2VIDEO, MKTAG('D', 'V', 'R', ' ') },
-    { CODEC_ID_MPEG2VIDEO, MKTAG('M', 'M', 'E', 'S') },
-    { CODEC_ID_MJPEG, MKTAG('M', 'J', 'P', 'G') },
-    { CODEC_ID_MJPEG, MKTAG('L', 'J', 'P', 'G') },
-    { CODEC_ID_LJPEG, MKTAG('L', 'J', 'P', 'G') },
-    { CODEC_ID_MJPEG, MKTAG('J', 'P', 'G', 'L') }, /* Pegasus lossless JPEG */
-    { CODEC_ID_MJPEG, MKTAG('M', 'J', 'L', 'S') }, /* JPEG-LS custom FOURCC for avi - decoder */
-    { CODEC_ID_MJPEG, MKTAG('j', 'p', 'e', 'g') },
-    { CODEC_ID_MJPEG, MKTAG('I', 'J', 'P', 'G') },
-    { CODEC_ID_MJPEG, MKTAG('A', 'V', 'R', 'n') },
-    { CODEC_ID_HUFFYUV, MKTAG('H', 'F', 'Y', 'U') },
-    { CODEC_ID_FFVHUFF, MKTAG('F', 'F', 'V', 'H') },
-    { CODEC_ID_CYUV, MKTAG('C', 'Y', 'U', 'V') },
-    { CODEC_ID_RAWVIDEO, 0 },
-    { CODEC_ID_RAWVIDEO, MKTAG('I', '4', '2', '0') },
-    { CODEC_ID_RAWVIDEO, MKTAG('Y', 'U', 'Y', '2') },
-    { CODEC_ID_RAWVIDEO, MKTAG('Y', '4', '2', '2') },
-    { CODEC_ID_RAWVIDEO, MKTAG('Y', 'V', '1', '2') },
-    { CODEC_ID_RAWVIDEO, MKTAG('U', 'Y', 'V', 'Y') },
-    { CODEC_ID_RAWVIDEO, MKTAG('I', 'Y', 'U', 'V') },
-    { CODEC_ID_RAWVIDEO, MKTAG('Y', '8', '0', '0') },
-    { CODEC_ID_RAWVIDEO, MKTAG('H', 'D', 'Y', 'C') },
-    { CODEC_ID_INDEO3, MKTAG('I', 'V', '3', '1') },
-    { CODEC_ID_INDEO3, MKTAG('I', 'V', '3', '2') },
-    { CODEC_ID_VP3, MKTAG('V', 'P', '3', '1') },
-    { CODEC_ID_VP3, MKTAG('V', 'P', '3', '0') },
-    { CODEC_ID_ASV1, MKTAG('A', 'S', 'V', '1') },
-    { CODEC_ID_ASV2, MKTAG('A', 'S', 'V', '2') },
-    { CODEC_ID_VCR1, MKTAG('V', 'C', 'R', '1') },
-    { CODEC_ID_FFV1, MKTAG('F', 'F', 'V', '1') },
-    { CODEC_ID_XAN_WC4, MKTAG('X', 'x', 'a', 'n') },
-    { CODEC_ID_MSRLE, MKTAG('m', 'r', 'l', 'e') },
-    { CODEC_ID_MSRLE, MKTAG(0x1, 0x0, 0x0, 0x0) },
-    { CODEC_ID_MSVIDEO1, MKTAG('M', 'S', 'V', 'C') },
-    { CODEC_ID_MSVIDEO1, MKTAG('m', 's', 'v', 'c') },
-    { CODEC_ID_MSVIDEO1, MKTAG('C', 'R', 'A', 'M') },
-    { CODEC_ID_MSVIDEO1, MKTAG('c', 'r', 'a', 'm') },
-    { CODEC_ID_MSVIDEO1, MKTAG('W', 'H', 'A', 'M') },
-    { CODEC_ID_MSVIDEO1, MKTAG('w', 'h', 'a', 'm') },
-    { CODEC_ID_CINEPAK, MKTAG('c', 'v', 'i', 'd') },
-    { CODEC_ID_TRUEMOTION1, MKTAG('D', 'U', 'C', 'K') },
-    { CODEC_ID_MSZH, MKTAG('M', 'S', 'Z', 'H') },
-    { CODEC_ID_ZLIB, MKTAG('Z', 'L', 'I', 'B') },
-    { CODEC_ID_SNOW, MKTAG('S', 'N', 'O', 'W') },
-    { CODEC_ID_4XM, MKTAG('4', 'X', 'M', 'V') },
-    { CODEC_ID_FLV1, MKTAG('F', 'L', 'V', '1') },
-    { CODEC_ID_SVQ1, MKTAG('s', 'v', 'q', '1') },
-    { CODEC_ID_TSCC, MKTAG('t', 's', 'c', 'c') },
-    { CODEC_ID_ULTI, MKTAG('U', 'L', 'T', 'I') },
-    { CODEC_ID_VIXL, MKTAG('V', 'I', 'X', 'L') },
-    { CODEC_ID_QPEG, MKTAG('Q', 'P', 'E', 'G') },
-    { CODEC_ID_QPEG, MKTAG('Q', '1', '.', '0') },
-    { CODEC_ID_QPEG, MKTAG('Q', '1', '.', '1') },
-    { CODEC_ID_WMV3, MKTAG('W', 'M', 'V', '3') },
-    { CODEC_ID_LOCO, MKTAG('L', 'O', 'C', 'O') },
-    { CODEC_ID_THEORA, MKTAG('t', 'h', 'e', 'o') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_WMV2), MKTAG('W', 'M', 'V', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_DVVIDEO), MKTAG('d', 'v', 's', 'd') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_DVVIDEO), MKTAG('d', 'v', 'h', 'd') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_DVVIDEO), MKTAG('d', 'v', 's', 'l') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_DVVIDEO), MKTAG('d', 'v', '2', '5') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG1VIDEO), MKTAG('m', 'p', 'g', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG1VIDEO), MKTAG('m', 'p', 'g', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG2VIDEO), MKTAG('m', 'p', 'g', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG2VIDEO), MKTAG('M', 'P', 'E', 'G') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG1VIDEO), MKTAG('P', 'I', 'M', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG1VIDEO), MKTAG('V', 'C', 'R', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG1VIDEO), 0x10000001 },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG2VIDEO), 0x10000002 },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG2VIDEO), MKTAG('D', 'V', 'R', ' ') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MPEG2VIDEO), MKTAG('M', 'M', 'E', 'S') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MJPEG), MKTAG('M', 'J', 'P', 'G') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MJPEG), MKTAG('L', 'J', 'P', 'G') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_LJPEG), MKTAG('L', 'J', 'P', 'G') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MJPEG), MKTAG('J', 'P', 'G', 'L') }, /* Pegasus lossless JPEG */
+    { OPENCV_AVCODEC_ID(CODEC_ID_MJPEG), MKTAG('M', 'J', 'L', 'S') }, /* JPEG-LS custom FOURCC for avi - decoder */
+    { OPENCV_AVCODEC_ID(CODEC_ID_MJPEG), MKTAG('j', 'p', 'e', 'g') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MJPEG), MKTAG('I', 'J', 'P', 'G') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MJPEG), MKTAG('A', 'V', 'R', 'n') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_HUFFYUV), MKTAG('H', 'F', 'Y', 'U') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_FFVHUFF), MKTAG('F', 'F', 'V', 'H') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_CYUV), MKTAG('C', 'Y', 'U', 'V') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), 0 },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), MKTAG('I', '4', '2', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), MKTAG('Y', 'U', 'Y', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), MKTAG('Y', '4', '2', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), MKTAG('Y', 'V', '1', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), MKTAG('U', 'Y', 'V', 'Y') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), MKTAG('I', 'Y', 'U', 'V') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), MKTAG('Y', '8', '0', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_RAWVIDEO), MKTAG('H', 'D', 'Y', 'C') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_INDEO3), MKTAG('I', 'V', '3', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_INDEO3), MKTAG('I', 'V', '3', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VP3), MKTAG('V', 'P', '3', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VP3), MKTAG('V', 'P', '3', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_ASV1), MKTAG('A', 'S', 'V', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_ASV2), MKTAG('A', 'S', 'V', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VCR1), MKTAG('V', 'C', 'R', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_FFV1), MKTAG('F', 'F', 'V', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_XAN_WC4), MKTAG('X', 'x', 'a', 'n') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSRLE), MKTAG('m', 'r', 'l', 'e') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSRLE), MKTAG(0x1, 0x0, 0x0, 0x0) },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSVIDEO1), MKTAG('M', 'S', 'V', 'C') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSVIDEO1), MKTAG('m', 's', 'v', 'c') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSVIDEO1), MKTAG('C', 'R', 'A', 'M') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSVIDEO1), MKTAG('c', 'r', 'a', 'm') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSVIDEO1), MKTAG('W', 'H', 'A', 'M') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSVIDEO1), MKTAG('w', 'h', 'a', 'm') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_CINEPAK), MKTAG('c', 'v', 'i', 'd') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_TRUEMOTION1), MKTAG('D', 'U', 'C', 'K') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_MSZH), MKTAG('M', 'S', 'Z', 'H') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_ZLIB), MKTAG('Z', 'L', 'I', 'B') },
+#if LIBAVFORMAT_VERSION_MAJOR < 56
+    { OPENCV_AVCODEC_ID(CODEC_ID_SNOW), MKTAG('S', 'N', 'O', 'W') },
+#endif
+    { OPENCV_AVCODEC_ID(CODEC_ID_4XM), MKTAG('4', 'X', 'M', 'V') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_FLV1), MKTAG('F', 'L', 'V', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_SVQ1), MKTAG('s', 'v', 'q', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_TSCC), MKTAG('t', 's', 'c', 'c') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_ULTI), MKTAG('U', 'L', 'T', 'I') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VIXL), MKTAG('V', 'I', 'X', 'L') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_QPEG), MKTAG('Q', 'P', 'E', 'G') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_QPEG), MKTAG('Q', '1', '.', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_QPEG), MKTAG('Q', '1', '.', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_WMV3), MKTAG('W', 'M', 'V', '3') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_LOCO), MKTAG('L', 'O', 'C', 'O') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_THEORA), MKTAG('t', 'h', 'e', 'o') },
 #if LIBAVCODEC_VERSION_INT>0x000409
-    { CODEC_ID_WNV1, MKTAG('W', 'N', 'V', '1') },
-    { CODEC_ID_AASC, MKTAG('A', 'A', 'S', 'C') },
-    { CODEC_ID_INDEO2, MKTAG('R', 'T', '2', '1') },
-    { CODEC_ID_FRAPS, MKTAG('F', 'P', 'S', '1') },
-    { CODEC_ID_TRUEMOTION2, MKTAG('T', 'M', '2', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_WNV1), MKTAG('W', 'N', 'V', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_AASC), MKTAG('A', 'A', 'S', 'C') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_INDEO2), MKTAG('R', 'T', '2', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_FRAPS), MKTAG('F', 'P', 'S', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_TRUEMOTION2), MKTAG('T', 'M', '2', '0') },
 #endif
 #if LIBAVCODEC_VERSION_INT>((50<<16)+(1<<8)+0)
-    { CODEC_ID_FLASHSV, MKTAG('F', 'S', 'V', '1') },
-    { CODEC_ID_JPEGLS,MKTAG('M', 'J', 'L', 'S') }, /* JPEG-LS custom FOURCC for avi - encoder */
-    { CODEC_ID_VC1, MKTAG('W', 'V', 'C', '1') },
-    { CODEC_ID_VC1, MKTAG('W', 'M', 'V', 'A') },
-    { CODEC_ID_CSCD, MKTAG('C', 'S', 'C', 'D') },
-    { CODEC_ID_ZMBV, MKTAG('Z', 'M', 'B', 'V') },
-    { CODEC_ID_KMVC, MKTAG('K', 'M', 'V', 'C') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_FLASHSV), MKTAG('F', 'S', 'V', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_JPEGLS),MKTAG('M', 'J', 'L', 'S') }, /* JPEG-LS custom FOURCC for avi - encoder */
+    { OPENCV_AVCODEC_ID(CODEC_ID_VC1), MKTAG('W', 'V', 'C', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VC1), MKTAG('W', 'M', 'V', 'A') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_CSCD), MKTAG('C', 'S', 'C', 'D') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_ZMBV), MKTAG('Z', 'M', 'B', 'V') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_KMVC), MKTAG('K', 'M', 'V', 'C') },
 #endif
 #if LIBAVCODEC_VERSION_INT>((51<<16)+(11<<8)+0)
-    { CODEC_ID_VP5, MKTAG('V', 'P', '5', '0') },
-    { CODEC_ID_VP6, MKTAG('V', 'P', '6', '0') },
-    { CODEC_ID_VP6, MKTAG('V', 'P', '6', '1') },
-    { CODEC_ID_VP6, MKTAG('V', 'P', '6', '2') },
-    { CODEC_ID_VP6F, MKTAG('V', 'P', '6', 'F') },
-    { CODEC_ID_JPEG2000, MKTAG('M', 'J', '2', 'C') },
-    { CODEC_ID_VMNC, MKTAG('V', 'M', 'n', 'c') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VP5), MKTAG('V', 'P', '5', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VP6), MKTAG('V', 'P', '6', '0') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VP6), MKTAG('V', 'P', '6', '1') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VP6), MKTAG('V', 'P', '6', '2') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VP6F), MKTAG('V', 'P', '6', 'F') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_JPEG2000), MKTAG('M', 'J', '2', 'C') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_VMNC), MKTAG('V', 'M', 'n', 'c') },
 #endif
 #if LIBAVCODEC_VERSION_INT>=((51<<16)+(49<<8)+0)
 // this tag seems not to exist in older versions of FFMPEG
-    { CODEC_ID_TARGA, MKTAG('t', 'g', 'a', ' ') },
+    { OPENCV_AVCODEC_ID(CODEC_ID_TARGA), MKTAG('t', 'g', 'a', ' ') },
 #endif
-    { CODEC_ID_NONE, 0 },
+    { OPENCV_AVCODEC_ID(CODEC_ID_NONE), 0 },
 };
