Adapt to new generic ROI interface for non convex ROIs

---
 src/explorer.cpp | 22 ++++++++++------------
 1 file changed, 10 insertions(+), 12 deletions(-)

diff --git src/explorer.cpp src/explorer.cpp
index 50a5424..111ab98 100644
--- src/explorer.cpp
+++ src/explorer.cpp
@@ -102,13 +102,13 @@ namespace correl {
 			integral(im2, sum2_, sumSqr2_, CV_64FC1);
 
 			// explore
-			int y1 = roi_in_im2.y(), y2 = y1+roi_in_im2.h()-1;
-			for(int y = y1; y <= y2; ++y)
+			image::Slice s;
+			roi_in_im2.start_slice(s);
+			while(roi_in_im2.next_slice(s))
 			{
-				int x1 = roi_in_im2.x(y), x2 = x1+roi_in_im2.w(y)-1;
-				for(int x = x1; x <= x2; ++x)
+				for(int x = s.x1; x <= s.x2; ++x)
 				{
-					doCorrelationFast(im1, im2, x, y, patch_in_im1, hpatch_in_im1, bestx, besty, best_score, 
+					doCorrelationFast(im1, im2, x, s.y, patch_in_im1, hpatch_in_im1, bestx, besty, best_score,
 						int_in_im2, sum1, sumSqr1, sum2_, sumSqr2_, minScore, partialLine, partialSum1, partialSumSqr1,
 						result_in_im2, results);
 					if (best_score > minScore) minScore = best_score;
@@ -155,13 +155,11 @@ namespace correl {
 			cv::Rect hpatch_in_im1(0, 0, patch_in_im1.width/2, patch_in_im1.height/2);
 
 			// explore
-			int y1 = roi_in_im2.y(), y2 = y1+roi_in_im2.h()-1;
-			for(int y = y1; y <= y2; ++y)
-			{
-				int x1 = roi_in_im2.x(y), x2 = x1+roi_in_im2.w(y)-1;
-				for(int x = x1; x <= x2; ++x)
-					doCorrelationRobust(im1, im2, x, y, patch_in_im1, hpatch_in_im1, bestx, besty, best_score, result_in_im2, false, results);
-			}
+			image::Slice s;
+			roi_in_im2.start_slice(s);
+			while(roi_in_im2.next_slice(s))
+				for(int x = s.x1; x <= s.x2; ++x)
+					doCorrelationRobust(im1, im2, x, s.y, patch_in_im1, hpatch_in_im1, bestx, besty, best_score, result_in_im2, false, results);
 		}
 
 		/**
-- 
1.8.1.5

