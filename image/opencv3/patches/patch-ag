$NetBSD: patch-modules_videoio_src_cap__v4l.cpp,v 1.4 2018/03/02 16:24:21 fhajny Exp $
Conditionalize settings not available in NetBSD's v4l2 emulation.

--- modules/videoio/src/cap_v4l.cpp~	2018-08-28 14:58:21.000000000 +0200
+++ modules/videoio/src/cap_v4l.cpp	2018-09-12 17:51:25.054158000 +0200
@@ -218,6 +218,7 @@
 #include <fcntl.h>
 #include <errno.h>
 #include <sys/ioctl.h>
+#include <inttypes.h>
 #include <sys/types.h>
 #include <sys/mman.h>
 
@@ -435,13 +436,17 @@
             V4L2_PIX_FMT_YUYV,
             V4L2_PIX_FMT_UYVY,
             V4L2_PIX_FMT_SBGGR8,
+#ifdef V4L2_PIX_FMT_SGBRG8
             V4L2_PIX_FMT_SGBRG8,
+#endif
             V4L2_PIX_FMT_SN9C10X,
 #ifdef HAVE_JPEG
             V4L2_PIX_FMT_MJPEG,
             V4L2_PIX_FMT_JPEG,
 #endif
+#ifdef V4L2_PIX_FMT_Y16
             V4L2_PIX_FMT_Y16
+#endif
     };
 
     for (size_t i = 0; i < sizeof(try_order) / sizeof(__u32); i++) {
@@ -491,12 +496,16 @@
     case V4L2_CID_GAIN:
         cap->gain = range;
         break;
+#ifdef V4L2_CID_EXPOSURE_ABSOLUTE
     case V4L2_CID_EXPOSURE_ABSOLUTE:
         cap->exposure = range;
         break;
+#endif
+#ifdef V4L2_CID_FOCUS_ABSOLUTE
     case V4L2_CID_FOCUS_ABSOLUTE:
         cap->focus = range;
         break;
+#endif
     }
 }
 
@@ -518,7 +527,9 @@
             break;
     }
 
+#ifdef V4L2_CID_FOCUS_ABSOLUTE
     v4l2_control_range(capture, V4L2_CID_FOCUS_ABSOLUTE);
+#endif
 }
 
 static int v4l2_set_fps(CvCaptureCAM_V4L* capture) {
@@ -535,8 +546,10 @@
     case V4L2_PIX_FMT_YUV420:
     case V4L2_PIX_FMT_MJPEG:
     case V4L2_PIX_FMT_JPEG:
+#ifdef V4L2_PIX_FMT_Y16
     case V4L2_PIX_FMT_Y16:
         return 1;
+#endif
     case V4L2_PIX_FMT_YUYV:
     case V4L2_PIX_FMT_UYVY:
         return 2;
@@ -565,11 +578,13 @@
         case V4L2_PIX_FMT_YUV420:
             size.height = size.height * 3 / 2; // "1.5" channels
             break;
+#ifdef V4L2_PIX_FMT_Y16
         case V4L2_PIX_FMT_Y16:
             if(!capture->convert_rgb){
                 depth = IPL_DEPTH_16U;
             }
             break;
+#endif
         }
     }
 
@@ -1537,18 +1552,21 @@
                 (unsigned char*)capture->frame.imageData);
         break;
 
+#ifdef V4L2_PIX_FMT_SGBRG8
     case V4L2_PIX_FMT_SGBRG8:
         sgbrg2rgb24(capture->form.fmt.pix.width,
                 capture->form.fmt.pix.height,
                 (unsigned char*)capture->buffers[(capture->bufferIndex+1) % capture->req.count].start,
                 (unsigned char*)capture->frame.imageData);
         break;
+#endif
     case V4L2_PIX_FMT_RGB24:
         rgb24_to_rgb24(capture->form.fmt.pix.width,
                 capture->form.fmt.pix.height,
                 (unsigned char*)capture->buffers[(capture->bufferIndex+1) % capture->req.count].start,
                 (unsigned char*)capture->frame.imageData);
         break;
+#ifdef V4L2_PIX_FMT_Y16
     case V4L2_PIX_FMT_Y16:
         if(capture->convert_rgb){
             y16_to_rgb24(capture->form.fmt.pix.width,
@@ -1561,6 +1579,7 @@
                     capture->frame.imageSize);
         }
         break;
+#endif
     }
 
     if (capture->returnFrame)
@@ -1581,14 +1600,22 @@
         return V4L2_CID_HUE;
     case CV_CAP_PROP_GAIN:
         return V4L2_CID_GAIN;
+#ifdef V4L2_CID_EXPOSURE_AUTO
     case CV_CAP_PROP_AUTO_EXPOSURE:
         return V4L2_CID_EXPOSURE_AUTO;
+#endif
+#ifdef V4L2_CID_EXPOSURE_ABSOLUTE
     case CV_CAP_PROP_EXPOSURE:
         return V4L2_CID_EXPOSURE_ABSOLUTE;
+#endif
+#ifdef V4L2_CID_FOCUS_AUTO
     case CV_CAP_PROP_AUTOFOCUS:
         return V4L2_CID_FOCUS_AUTO;
+#endif
+#ifdef V4L2_CID_FOCUS_ABSOLUTE
     case CV_CAP_PROP_FOCUS:
         return V4L2_CID_FOCUS_ABSOLUTE;
+#endif
     default:
         return -1;
     }
@@ -1736,12 +1763,14 @@
         return false;
     }
 
+#if defined(V4L2_CID_EXPOSURE_AUTO) && defined(V4L2_EXPOSURE_MANUAL) && defined(V4L2_CID_EXPOSURE_ABSOLUTE)
     if(control.id == V4L2_CID_EXPOSURE_AUTO && control.value == V4L2_EXPOSURE_MANUAL) {
         // update the control range for expose after disabling autoexposure
         // as it is not read correctly at startup
         // TODO check this again as it might be fixed with Linux 4.5
         v4l2_control_range(capture, V4L2_CID_EXPOSURE_ABSOLUTE);
     }
+#endif
 
     /* all was OK */
     return true;
